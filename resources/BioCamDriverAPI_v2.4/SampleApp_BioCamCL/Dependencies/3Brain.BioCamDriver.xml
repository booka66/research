<?xml version="1.0"?>
<doc>
    <assembly>
        <name>3Brain.BioCamDriver</name>
    </assembly>
    <members>
        <member name="T:_3Brain.BioCamDriver.ADCSampleDecimation">
            <summary>
            Enumerates all ADC sample decimation types.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamDupleX">
            <summary>
            Represents a BioCAM DupleX.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamDupleX.Model">
            <summary>
            Gets the BioCAM model.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamDupleX.Tag">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.BioCamDupleXTag" /> to store information on the BioCAM RFID.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDupleX.DoesSupportFunc(_3Brain.BioCamDriver.BioCamFunc)">
            <summary>
            Returns a value indicating whether the BioCAM supports the specified <see cref="T:_3Brain.BioCamDriver.BioCamFunc" />.
            </summary>
            <param name="bioCamFunc">The <see cref="T:_3Brain.BioCamDriver.BioCamFunc" /> to check.</param>
            <returns>True if the function is supported; otherwise, false.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamDupleXTag">
            <summary>
            Represents a class managing the information stored in the BioCAM DupleX RFID.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamDupleXTag.CalTempPair1">
            <summary>
            Gets or sets the first calibration <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamDupleXTag.CalTempPair2">
            <summary>
            Gets or sets the second calibration <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamDupleXTag.IsTempSensorCalibrated">
            <summary>
            Gets a value indicating whether the temperature sensor is calibrated, meaning that calibration information is written to the tag.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamDupleXTag.HasStimModule">
            <summary>
            Gets or sets if it has a stimulation module.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamUsbBase">
            <summary>
            Defines an abstract BioCAM based on a <see cref="T:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard" /> interface board.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamUsbBase.MeaPlate">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.RfidPlatePilot" /> plate pilot class.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamUsbBase.InterfaceBoard">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard" /> interface board used to communicate with the BioCAM.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamUsbBase.Serial">
            <summary>
            Gets the serial number of the BioCAM whenever available. In case no serial number is available for the current BioCAM the value will be -1.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamUsbBase.ComPortMaxMsgInLength">
            <summary>
            Gets the maximum length of a message that can be sent to the BioCAM with a single instruction.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamUsbBase.SetInterfaceBoard(_3Brain.BioCamDriver.IInterfaceBoard)">
            <summary>
            Set the <see cref="T:_3Brain.BioCamDriver.IInterfaceBoard" /> the BioCAM is attached to.
            </summary>
            <param name="interfaceBoard">The <see cref="T:_3Brain.BioCamDriver.IInterfaceBoard" /> that will be used by the BioCAM.</param>
            <returns>True when the board is set and initialized successfully; false, otherwise.</returns>
            <exception cref="T:System.ArgumentException">Throws when <paramref name="interfaceBoard" /> name="interfaceBoard"/&gt; is not a <see cref="T:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard" />.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamUsbBase.Initialize">
            <summary>
            Initialize the BioCAM.
            </summary>
            <returns>Whether the operation was successful.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamUsbBase.ProcessPayload(_3Brain.BioCamDriver.DataPacketHeader,System.Byte[],System.Int32)">
            <summary>
            Process the payload identified by the given header.
            </summary>
            <param name="header">The header.</param>
            <param name="data">The data containing the payload or null in case no data was retrieved.</param>
            <param name="payloadIndex">the index within data containing the payload.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamUsbBase.ComPortSend(System.UInt32,System.Byte[],System.Int32,System.Boolean,System.String)">
            <summary>
            Communicate with the BioCAM by sending the given command plus possibly a message.
            </summary>
            <param name="cmd">The BioCAM command.</param>
            <param name="msgIn">The message to be sent with the command. Use null to not send any additional information together with the command.</param>
            <param name="processingWaitingTimeMs">The time left for the BioCAM to process the information and how long to wait after sending the command.</param>
            <param name="requireAck">Whether an acknowledgment of the sent command is required to the BioCAM. If required, this method will return true only in case when the command is acknowledged.</param>
            <param name="logCategory">The category used for logging purposes.</param>
            <returns>Whether data was properly sent and acknowledged by the BioCAM.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamUsbBase.ComPortSendAndReceive(System.UInt32,System.Byte[],System.Int32,System.Byte[]@,System.Int32,System.Boolean,System.String)">
            <summary>
            Communicate with the BioCAM sending the given command plus possibly a message and reading back the requested message out length.
            </summary>
            <param name="cmd">The BioCAM command.</param>
            <param name="msgOut">The reply.</param>
            <param name="msgOutLength">The length of the reply.</param>
            <param name="msgIn">The message to be sent with the command or null to not send any additional information together with the command.</param>
            <param name="processingWaitingTimeMs">The time left to the BioCAM to process the information and hence to wait after sending the command.</param>
            <param name="requireAck">Whether an acknowledgment of the sent command is required to the BioCAM. If required, this method return true only in case the command is acknowledged.</param>
            <param name="logCategory">The category used for logging purposes.</param>
            <returns>Whether data was properly sent and acknowledged by the BioCAM and the reply received.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamUsbBase.UpdateAsync(System.Byte[],System.IProgress{System.Int32})">
            <summary>
            Return a <see cref="T:System.Threading.Tasks.Task" /> updating a BioCAM from a binary file.
            </summary>
            <param name="updateFile">The firmware file in bytes.</param>
            <param name="progress">The progress report interface.</param>
            <returns>The BioCAM updating <see cref="T:System.Threading.Tasks.Task" />.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the BioCAM streaming.</exception>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamUsbTag">
            <summary>
            Defines an abstract class managing the information stored in the BioCAM RFID.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamUsbTag.BioCam">
            <summary>
            Gets the owner <see cref="T:_3Brain.BioCamDriver.BioCamUsbBase" />.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamUsbTag.ReadSerial">
            <summary>
            Reads the serial.
            </summary>
            <returns>True if reading is successful.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamUsbTag.WriteSerial">
            <summary>
            Writes the serial.
            </summary>
            <returns>True if reading is successful.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.EepromTagBase">
            <summary>
            Defines an abstract EEPROM Tag.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.EepromTagBase.IsRead">
            <summary>
            Gets a value indicating whether the tag was successfully read last time <see cref="M:_3Brain.BioCamDriver.EepromTagBase.ReadTag" /> was called.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.EepromTagBase.IsEmpty">
            <summary>
            Gets a value indicating whether the tag is empty (does not contain data).
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.EepromTagBase.TagVersion">
            <summary>
            Gets the version of this tag.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.EepromTagBase.LatestTagVersion">
            <summary>
            Gets the latest tag version under usage.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.EepromTagBase.ReadSerial">
            <summary>
            Reads the serial.
            </summary>
            <returns>True if reading is successful.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.EepromTagBase.WriteSerial">
            <summary>
            Writes the serial.
            </summary>
            <returns>True if reading is successful.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.EepromTagBase.ReadTag">
            <summary>
            Reads the whole tag.
            </summary>
            <returns>True if reading is successful.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.EepromTagBase.WriteTag(System.Boolean)">
            <summary>
            Write the tag information.
            </summary>
            <param name="forceWritingAll">Whether all the fields should be written instead than writing only those that have changed from last check.</param>
            <returns>Whether the writing was successful.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.HyperCamDelta">
            <summary>
            Represents a HyperCAM Delta.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.HyperCamDelta.Model">
            <summary>
            Gets the BioCAM model.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.HyperCamDelta.MeaPlateModel">
            <summary>
            Gets the <see cref="T:_3Brain.Common.MeaPlateModel" /> available on the source.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.HyperCamDelta.DataProtocol">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.BioCamDataFormat" /> which stores information about the data format.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.HyperCamDelta.DoesSupportFunc(_3Brain.BioCamDriver.BioCamFunc)">
            <summary>
            Returns a value indicating whether the BioCAM supports the specified <see cref="T:_3Brain.BioCamDriver.BioCamFunc" />.
            </summary>
            <param name="bioCamFunc">The <see cref="T:_3Brain.BioCamDriver.BioCamFunc" /> to check.</param>
            <returns>True if the function is supported; otherwise, false.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.HyperCamAlpha">
            <summary>
            Represents a HyperCAM Alpha.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.HyperCamAlpha.Model">
            <summary>
            Gets the BioCAM model.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.HyperCamAlpha.MeaPlateModel">
            <summary>
            Gets the <see cref="T:_3Brain.Common.MeaPlateModel" /> available on the source.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.HyperCamAlpha.DoesSupportFunc(_3Brain.BioCamDriver.BioCamFunc)">
            <summary>
            Returns a value indicating whether the BioCAM supports the specified <see cref="T:_3Brain.BioCamDriver.BioCamFunc" />.
            </summary>
            <param name="bioCamFunc">The <see cref="T:_3Brain.BioCamDriver.BioCamFunc" /> to check.</param>
            <returns>True if the function is supported; otherwise, false.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.HyperCamDeltaDataFormat">
            <summary>
            Defines the <see cref="T:_3Brain.BioCamDriver.HyperCamDelta" /> data protocol info and tools to convert sampled data to analog values and viceversa.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.HyperCamDeltaDataFormat.#ctor(_3Brain.BioCamDriver.IBioCam,System.Int32,System.Boolean,System.Single)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.HyperCamDeltaDataFormat" />.
            </summary>
            <param name="owner">The <see cref="T:_3Brain.BioCamDriver.IBioCam" /> owner.</param>
            <param name="dataPacketTimeSpanMs">The number of milliseconds represented on a single acquired data packet.</param>
            <param name="optimizeDataPacketLatency">A value indicating whether the data stream is optimized to optimize speed (minimum data packet latency) and the consistency of the time interval between successive data packets.</param>
            <param name="biologicalLikelihoodFactor">A value that measures the probability to have meaningful information to be transmitted.</param>
        </member>
        <member name="P:_3Brain.BioCamDriver.HyperCamDeltaDataFormat.BiologicalLikelihoodFactor">
            <summary>
            Gets a value that measures the probability to have meaningful information to be transmitted.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.HyperCamDeltaDataFormat.DataPacketLength">
            <summary>
            Gets the size in bytes of a single data packet without taking into account the header.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.HyperCamDeltaTag">
            <summary>
            Represents a class managing the information stored in the HyperCAM Delta RFID.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.HyperCamTag">
            <summary>
            Represents a class managing the information stored in the HyperCAM RFID.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.HyperCamTag.IsTempSensorCalibrated">
            <summary>
            Gets a value indicating whether the temperature sensor is calibrated, meaning that calibration information is written to the tag.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.HyperCamTag.HasStimModule">
            <summary>
            Gets or sets if it has a stimulation module.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamDataFormat">
            <summary>
            Defines the <see cref="T:_3Brain.BioCamDriver.IBioCam" /> data protocol info and tools to convert sampled data to analog values and viceversa.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamDataFormat.optimizeDataPacketLatency">
            <summary>
            A value indicating whether the data stream is optimized to optimize speed (minimum data packet latency) and the consistency of the time interval between successive data packets.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.#ctor(_3Brain.BioCamDriver.IBioCam,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.BioCamDataFormat" />.
            </summary>
            <param name="owner">The <see cref="T:_3Brain.BioCamDriver.IBioCam" /> owner.</param>
            <param name="dataPacketTimeSpanMs">The number of milliseconds represented on a single acquired data packet.</param>
            <param name="optimizeDataPacketLatency">A value indicating whether the data stream is optimized to optimize speed (minimum data packet latency) and the consistency of the time interval between successive data packets.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.#ctor(_3Brain.BioCamDriver.IBioCam,System.Int32,System.Boolean,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.BioCamDataFormat" />.
            </summary>
            <param name="owner">The <see cref="T:_3Brain.BioCamDriver.IBioCam" /> owner.</param>
            <param name="dataPacketTimeSpanMs">The number of milliseconds represented on a single acquired data packet.</param>
            <param name="optimizeDataPacketLatency">A value indicating whether the data stream is optimized to optimize speed (minimum data packet latency) and the consistency of the time interval between successive data packets.</param>
            <param name="minAnalogValue">The minimum analog value that the signal can reach.</param>
            <param name="maxAnalogValue">The maximum analog value that the signal can reach.</param>
            <param name="minDigitalValue">The minimum digital value that the signal can reach.</param>
            <param name="maxDigitalValue">The maximum digital value that the signal can reach.</param>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamDataFormat.FrameRate">
            <summary>
            Gets the frame rate.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamDataFormat.NWells">
            <summary>
            Gets the number of wells transmitted.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamDataFormat.NChsPerWell">
            <summary>
            Gets the number of channels per well. If the number of channels is not equal for all wells, -1 is returned.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamDataFormat.ChSampleByteSize">
            <summary>
            Gets the number of bytes used to store a sample (from a single channel) into the hard disk.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamDataFormat.DataPacketTimeSpanMs">
            <summary>
            Gets the number of milliseconds represented on a single acquired data packet.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamDataFormat.DataPacketNFrames">
            <summary>
            Gets the number of sample frames that are contained inside a data packet.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamDataFormat.DataPacketLength">
            <summary>
            Gets the size in bytes of a single data packet without taking into account the header.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamDataFormat.OptimizeDataPacketLatency">
            <summary>
            Gets a value indicating whether the data stream is optimized to optimize speed (minimum data packet latency) and the consistency of the time interval between successive data packets.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.MicrosecondsToFrames(System.Double)">
            <summary>
            Returns the number of frames corresponding to the given microseconds.
            </summary>
            <param name="us">The microseconds to convert in number of frames.</param>
            <returns>The number of frames corresponding to the given microseconds.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.MicrosecondsToFramesAsDouble(System.Double)">
            <summary>
            Returns the number of frames corresponding to the given microseconds.
            </summary>
            <param name="us">The microseconds to convert in number of frames.</param>
            <returns>The number of frames corresponding to the given microseconds.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.MillisecondsToFrames(System.Double)">
            <summary>
            Returns the number of frames corresponding to the given milliseconds.
            </summary>
            <param name="ms">The milliseconds to convert in number of frames.</param>
            <returns>The number of frames corresponding to the given milliseconds.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.MillisecondsToFramesAsDouble(System.Double)">
            <summary>
            Returns the number of frames corresponding to the given milliseconds.
            </summary>
            <param name="ms">The milliseconds to convert in number of frames.</param>
            <returns>The number of frames corresponding to the given milliseconds.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.SecondsToFrames(System.Double)">
            <summary>
            Returns the number of frames corresponding to the given seconds.
            </summary>
            <param name="sec">The seconds to convert in number of frames.</param>
            <returns>The number of frames corresponding to the given seconds.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.SecondsToFramesAsDouble(System.Double)">
            <summary>
            Returns the number of frames corresponding to the given seconds.
            </summary>
            <param name="sec">The seconds to convert in number of frames.</param>
            <returns>The number of frames corresponding to the given seconds.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.MinutesToFrames(System.Double)">
            <summary>
            Returns the number of frames corresponding to the given minutes.
            </summary>
            <param name="min">The minutes to convert in number of frames.</param>
            <returns>The number of frames corresponding to the given minutes.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.MinutesToFramesAsDouble(System.Double)">
            <summary>
            Returns the number of frames corresponding to the given minutes.
            </summary>
            <param name="min">The minutes to convert in number of frames.</param>
            <returns>The number of frames corresponding to the given minutes.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.HoursToFrames(System.Double)">
            <summary>
            Returns the number of frames corresponding to the given hours.
            </summary>
            <param name="hours">The hours to convert in number of frames.</param>
            <returns>The number of frames corresponding to the given hours.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.HoursToFramesAsDouble(System.Double)">
            <summary>
            Returns the number of frames corresponding to the given hours.
            </summary>
            <param name="hours">The hours to convert in number of frames.</param>
            <returns>The number of frames corresponding to the given hours.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.TimeSpanToFrames(System.TimeSpan)">
            <summary>
            Returns the number of frames corresponding to the given <see cref="T:System.TimeSpan" />.
            </summary>
            <param name="timeSpan">The <see cref="T:System.TimeSpan" /> to convert in number of frames.</param>
            <returns>The number of frames corresponding to the given <see cref="T:System.TimeSpan" />.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.TimeSpanToFramesAsDouble(System.TimeSpan)">
            <summary>
            Returns the number of frames corresponding to the given <see cref="T:System.TimeSpan" />.
            </summary>
            <param name="timeSpan">The <see cref="T:System.TimeSpan" /> to convert in number of frames.</param>
            <returns>The number of frames corresponding to the given <see cref="T:System.TimeSpan" />.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.FramesToMicroseconds(System.Int64)">
            <summary>
            Returns the microseconds corresponding to the given number frames.
            </summary>
            <param name="frames">The number of frames to convert in microseconds.</param>
            <returns>The microseconds corresponding to the given number of frames.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.FramesToMicroseconds(System.Double)">
            <summary>
            Returns the microseconds corresponding to the given number frames.
            </summary>
            <param name="frames">The number of frames to convert in microseconds.</param>
            <returns>The microseconds corresponding to the given number of frames.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.FramesToMilliseconds(System.Int64)">
            <summary>
            Returns the milliseconds corresponding to the given number frames.
            </summary>
            <param name="frames">The number of frames to convert in milliseconds.</param>
            <returns>The milliseconds corresponding to the given number of frames.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.FramesToMilliseconds(System.Double)">
            <summary>
            Returns the milliseconds corresponding to the given number frames.
            </summary>
            <param name="frames">The number of frames to convert in milliseconds.</param>
            <returns>The milliseconds corresponding to the given number of frames.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.FramesToSeconds(System.Int64)">
            <summary>
            Returns the seconds corresponding to the given number frames.
            </summary>
            <param name="frames">The number of frames to convert in seconds.</param>
            <returns>The seconds corresponding to the given number of frames.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.FramesToSeconds(System.Double)">
            <summary>
            Returns the seconds corresponding to the given number frames.
            </summary>
            <param name="frames">The number of frames to convert in seconds.</param>
            <returns>The seconds corresponding to the given number of frames.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.FramesToMinutes(System.Int64)">
            <summary>
            Returns the minutes corresponding to the given number frames .
            </summary>
            <param name="frames">The number of frames to convert in minutes.</param>
            <returns>The minutes corresponding to the given number of frames.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.FramesToMinutes(System.Double)">
            <summary>
            Returns the minutes corresponding to the given number frames .
            </summary>
            <param name="frames">The number of frames to convert in minutes.</param>
            <returns>The minutes corresponding to the given number of frames.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.FramesToHours(System.Int64)">
            <summary>
            Returns the hours corresponding to the given number frames .
            </summary>
            <param name="frames">The number of frames to convert in hours.</param>
            <returns>The hours corresponding to the given number of frames.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.FramesToHours(System.Double)">
            <summary>
            Returns the hours corresponding to the given number frames .
            </summary>
            <param name="frames">The number of frames to convert in hours.</param>
            <returns>The hours corresponding to the given number of frames.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.FramesToTimeSpan(System.Int64)">
            <summary>
            Returns the <see cref="T:System.TimeSpan" /> corresponding to the given number frames .
            </summary>
            <param name="frames">The number of frames to convert in <see cref="T:System.TimeSpan" />.</param>
            <returns>The <see cref="T:System.TimeSpan" /> corresponding to the given number of frames.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDataFormat.FramesToTimeSpan(System.Double)">
            <summary>
            Returns the <see cref="T:System.TimeSpan" /> corresponding to the given number frames .
            </summary>
            <param name="frames">The number of frames to convert in <see cref="T:System.TimeSpan" />.</param>
            <returns>The <see cref="T:System.TimeSpan" /> corresponding to the given number of frames.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamModel">
            <summary>
            Enumerates all BioCAM models.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamModel.Unknown">
            <summary>
            Unknown BioCAM.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamModel.BioCAM_4096">
            <summary>
            BioCAM 4096
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamModel.BioCAM_X">
            <summary>
            BioCAM X
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamModel.BioCAM_SiNAPS">
            <summary>
            BioCAM SiNAPS
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamModel.BioCAM_DupleX">
            <summary>
            BioCAM DupleX
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamModel.HyperCAM_Alpha">
            <summary>
            HyperCAM Alpha
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamModel.HyperCAM_Delta">
            <summary>
            HyperCAM Delta
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamModelExtensions">
            <summary>
            Represents <see cref="T:_3Brain.BioCamDriver.BioCamModel" /> static extensions methods.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamModelExtensions.ToDataBaseName(_3Brain.BioCamDriver.BioCamModel)">
            <summary>
            Gets the DB name used for this <see cref="T:_3Brain.BioCamDriver.BioCamModel" />.
            </summary>
            <param name="model">The <see cref="T:_3Brain.BioCamDriver.BioCamModel" />.</param>
            <returns>The model DB string.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamModelExtensions.ToFullCommercialName(_3Brain.BioCamDriver.BioCamModel)">
            <summary>
            Gets the full commercial name of this <see cref="T:_3Brain.BioCamDriver.BioCamModel" />.
            </summary>
            <param name="model">The <see cref="T:_3Brain.BioCamDriver.BioCamModel" />.</param>
            <returns>The commercial name.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamModelExtensions.ToModelName(_3Brain.BioCamDriver.BioCamModel)">
            <summary>
            Gets the model name of this <see cref="T:_3Brain.BioCamDriver.BioCamModel" />.
            </summary>
            <param name="model">The <see cref="T:_3Brain.BioCamDriver.BioCamModel" />.</param>
            <returns>The model string.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamModelExtensions.IsUsbBioCam(_3Brain.BioCamDriver.BioCamModel)">
            <summary>
            Returns a value indicating whether the <see cref="T:_3Brain.BioCamDriver.BioCamModel" /> is of a BioCAM that stream over USB.
            </summary>
            <param name="model">The <see cref="T:_3Brain.BioCamDriver.BioCamModel" />.</param>
            <returns>True if it is a BioCAM streaming over USB; false, otherwise.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamModelExtensions.ToHardwareBaseVersion(_3Brain.BioCamDriver.BioCamModel)">
            <summary>
            Returns the base version (i.e. only the major is filled in, while the minor version is left to 0) of the hardware associated with the <see cref="T:_3Brain.BioCamDriver.BioCamModel" />.
            </summary>
            <param name="model">The <see cref="T:_3Brain.BioCamDriver.BioCamModel" />.</param>
            <returns>The <see cref="T:System.Version" /> giving the major version of the hardware.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamModelExtensions.ToBioCamModel(System.Version)">
            <summary>
            Return the <see cref="T:_3Brain.BioCamDriver.BioCamModel" /> associated with the current hardware version.
            </summary>
            <param name="hwVersion">The hardware <see cref="T:System.Version" />.</param>
            <returns>The <see cref="T:_3Brain.BioCamDriver.BioCamModel" />.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamModelExtensions.IsSingleWell(_3Brain.BioCamDriver.BioCamModel)">
            <summary>
            Returns true if the <see cref="T:_3Brain.BioCamDriver.BioCamModel" /> is a single-well model, false otherwise.
            </summary>
            <param name="model">The <see cref="T:_3Brain.BioCamDriver.BioCamModel" />.</param>
            <returns>True if is a single-well model, false otherwise.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamModelExtensions.IsMultiWell(_3Brain.BioCamDriver.BioCamModel)">
            <summary>
            Returns true if the <see cref="T:_3Brain.BioCamDriver.BioCamModel" /> is a multi-well model, false otherwise.
            </summary>
            <param name="model">The <see cref="T:_3Brain.BioCamDriver.BioCamModel" />.</param>
            <returns>True if is a multi-well model, false otherwise.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamSettings">
            <summary>
            Defines the <see cref="T:_3Brain.BioCamDriver.IBioCam" /> settings.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettings.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.BioCamSettings" />.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettings.Initialize(_3Brain.BioCamDriver.BioCamBase)">
            <summary>
            Initializes the <see cref="T:_3Brain.BioCamDriver.BioCamSettings" /> given a <see cref="T:_3Brain.BioCamDriver.BioCamBase" />.
            </summary>
            <param name="bioCam">The <see cref="T:_3Brain.BioCamDriver.BioCamBase" />.</param>
            <exception cref="T:System.ArgumentNullException">Throws when <paramref name="bioCam" /> is null.</exception>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.Constants">
            <summary>
            Gets settings constants.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.RoiChannels">
            <summary>
            Gets an array of <see cref="T:_3Brain.Common.ChCoord" /> that represents the region of interest (ROI).
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.SourceChannels">
            <summary>
            Gets an array of <see cref="T:_3Brain.Common.ChCoord" /> containing the data source channels.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.StreamChannels">
            <summary>
            Gets an array of <see cref="T:_3Brain.Common.ChCoord" /> containing the data streaming channels.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.EffectiveRoiChannels">
            <summary>
            Gets an jagged array of <see cref="T:_3Brain.Common.ChCoord" /> that represents the effective region of interest (ROI).
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.KnownRoi">
            <summary>
            Gets or sets a <see cref="T:_3Brain.Common.MeaChipRoi" /> that represent the known chip region of interest (ROI).
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.StreamingMode">
            <summary>
            Gets or sets the BioCAM the streaming mode.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.FrameRate">
            <summary>
            Gets the output frame rate.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.AproxTargetFrameRate">
            <summary>
            Gets or sets the approximate target frame rate, i.e. a rounded up value for the output frame rate. Values must be set among those available inside <see cref="P:_3Brain.BioCamDriver.BioCamSettings.AproxTargetFrameRates" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.AproxTargetFrameRates">
            <summary>
            Gets the list of available target frame rates.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.IsHpPreEnabled">
            <summary>
            Gets or sets whether the high-pass pre filter is enabled.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.HpPreCutoffFrequency">
            <summary>
            Gets or sets the high-pass pre filter cutoff frequency.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.IsHpPostEnabled">
            <summary>
            Gets or sets whether the high-pass post filter is enabled.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.HpPostCutOffFrequency">
            <summary>
            Gets or sets the high-pass post filter cutoff frequency.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.HpPostOrder">
            <summary>
            Gets or sets the high-pass post filter order. 
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.IsLpEnabled">
            <summary>
            Gets or sets whether the low-pass filter is enabled.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.LpCutoffFrequency">
            <summary>
            Gets or sets the low-pass filter cutoff frequency. 
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.IOSignals">
            <summary>
            Gets an array of all <see cref="T:_3Brain.BioCamDriver.BioCamIOSignal" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.IOSignalsSettings">
            <summary>
            Gets a dictionary containing a <see cref="T:_3Brain.BioCamDriver.BioCamSettingsIOSignalBase" /> for each <see cref="T:_3Brain.BioCamDriver.BioCamIOSignal" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettings.DebugMode">
            <summary>
            Gets or sets whether we are in debug mode. NOTE: Outside debug mode, <see cref="P:_3Brain.BioCamDriver.BioCamSettings.HpPostCutOffFrequency" /> == <see cref="P:_3Brain.BioCamDriver.BioCamSettings.HpPreCutoffFrequency" />.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettings.ResetRoi">
            <summary>
            Reset any region of interest (ROI) that have been set.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettings.IsRoiValid(_3Brain.Common.ChCoord[])">
            <summary>
            Returns whether the given array of <see cref="T:_3Brain.Common.ChCoord" /> that represent a region of interest (ROI) is valid.
            </summary>
            <param name="roi">The <see cref="T:_3Brain.Common.ChCoord" /> array of the ROI.</param>
            <returns>True if the ROI is valid, false otherwise.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettings.GetAllIOSignalOutputChs">
            <summary>
            Returns the output <see cref="T:_3Brain.Common.ChCoord" /> for all <see cref="T:_3Brain.BioCamDriver.BioCamIOSignal" />.
            </summary>
            <returns>A output <see cref="T:_3Brain.Common.ChCoord" /> array.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettings.GetIOSignalOutputChs(System.Collections.Generic.IEnumerable{_3Brain.BioCamDriver.BioCamIOSignal})">
            <summary>
            Returns the output <see cref="T:_3Brain.Common.ChCoord" /> for the given <see cref="T:_3Brain.BioCamDriver.BioCamIOSignal" /> IEnumerable.
            </summary>
            <param name="ioSignals">A <see cref="T:_3Brain.BioCamDriver.BioCamIOSignal" /> IEnumerable.</param>
            <returns>A output <see cref="T:_3Brain.Common.ChCoord" /> array.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettings.GetIOSignalOutputCh(_3Brain.BioCamDriver.BioCamIOSignal)">
            <summary>
            Returns the <see cref="T:_3Brain.BioCamDriver.BioCamIOSignal" /> output <see cref="T:_3Brain.Common.ChCoord" />.
            </summary>
            <param name="ioSignal">The <see cref="T:_3Brain.BioCamDriver.BioCamIOSignal" />.</param>
            <returns>The output <see cref="T:_3Brain.Common.ChCoord" />.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettings.SetIOSignalFirstAvailableOutputCh(_3Brain.BioCamDriver.BioCamIOSignal)">
            <summary>
            Sets to the given <see cref="T:_3Brain.BioCamDriver.BioCamIOSignal" /> the first available output <see cref="T:_3Brain.Common.ChCoord" />.
            </summary>
            <param name="ioSignal">The <see cref="T:_3Brain.BioCamDriver.BioCamIOSignal" />.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettings.GetStreamedChs(_3Brain.Common.MeaDataType)">
            <summary>
            Gets the channels that are streamed for the given <see cref="T:_3Brain.Common.MeaDataType" />. Streamed channels can do not coincide with the output channels in case they are grouped differently because of the <see cref="T:_3Brain.Common.IMeaDataSourceProvider" />.
            </summary>
            <param name="dataType">The <see cref="T:_3Brain.Common.MeaDataType" /> whose streamed channels are returned.</param>
            <returns>The streamed channels for the given <see cref="T:_3Brain.Common.MeaDataType" />.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettings.GetSourceChs(_3Brain.Common.MeaDataType)">
            <summary>
            Gets the source channels coming from the underlying <see cref="T:_3Brain.Common.IMeaDataSourceProvider" />.
            </summary>
            <param name="dataType">The <see cref="T:_3Brain.Common.MeaDataType" /> whose source channels are returned.</param>
            <returns>The source channels for the given <see cref="T:_3Brain.Common.MeaDataType" />.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettings.LoadDefault">
            <summary>
            Loads the default settings values.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettings.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="E:_3Brain.BioCamDriver.BioCamSettings.IOSignalOutputChsChanged">
            <summary>
            Fires when an IO signal <see cref="P:_3Brain.BioCamDriver.BioCamSettingsIOSignalBase.OutputCh" /> has changed.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamSettingsConstants">
            <summary>
            Represents <see cref="T:_3Brain.BioCamDriver.BioCamSettings" /> constants.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamStreamingMode">
            <summary>
            Enumerated BioCAM streaming modes.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamTagBase">
            <summary>
            Defines an abstract class managing the information stored in the BioCAM.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamTagBase.IsEmpty">
            <summary>
            Gets a value indicating whether the tag is empty (does not contain data).
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamTagBase.RequiresUpgrade">
            <summary>
            Gets a value indicating that the tag require an upgrade.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamTagBase.ModulesInfoNBytes">
            <summary>
            Gets the modules info size in bytes.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamTagBase.BioCamSerial">
            <summary>
            Gets or sets the <see cref="T:_3Brain.BioCamDriver.BioCamSerial" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamTagBase.ModulesInfo">
            <summary>
            Gets the modules info.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamTagBase.OperatingTimeMinutes">
            <summary>
            Gets or sets the tag operating time in minutes.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamTagBase.IsTempSensorCalibrated">
            <summary>
            Gets a value indicating whether the temperature sensor is calibrated, meaning that calibration information is written to the tag.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamTagBase.HasStimModule">
            <summary>
            Gets or sets if it has a stimulation module.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamTagBase.UpgradeTag">
            <summary>
            Rewrites all tag information.
            </summary>
            <returns>Whether the upgrade was successful.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamTagBase.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamUsbComStatus">
            <summary>
            Enumerates the status codes for the data transmitted over the communication port with the BioCAM.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamFunc">
            <summary>
            Enumerates all BioCAM functionalities.    
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamFunc.ProgrammableLPFilter">
            <summary>
            Programmable low-pass filter.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamFunc.Stimulator">
            <summary>
            The BioCAM firmware supports internal stimulator (does not guarantee the stimulator module is installed).
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamFunc.CalibrationBlanking">
            <summary>
            The BioCAM firmware supports calibration blanking (HyperCAM Alpha most probably not).
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamFunc.ProgrammableCo2c">
            <summary>
            Programmable CO2 controller (Only for HyperCAMs above a certain FW version).
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamFunc.ProgrammableLed">
            <summary>
            Programmable LED (Not for HyperCAMs).
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamFunc.ProgrammablePlateDoor">
            <summary>
            Programmable plate door (Only for HyperCAMs).
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamFunc.PlateConnectionStatus">
            <summary>
            The BioCAM firmware supports controlling if the MEA plate is properly connected.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamFunc.ProgrammablePlateLock">
            <summary>
            Programmable plate lock (Only for HyperCAMs).
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamIOSignal">
            <summary>
            Enumerates all BioCAM IO signal types.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamSerial">
            <summary>
            Represents the serial number of a BioCAM.
            ATTENTION: changing the type of serial (e.g. passing from int to string) will have impact on the <see cref="T:_3Brain.BioCamDriver.BioCamTagBase" />.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSerial.#ctor(System.Int32)">
            <summary>
            Initialize a new instance of <see cref="T:_3Brain.BioCamDriver.BioCamSerial" />.
            </summary>
            <param name="serial">The BioCAM serial.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSerial.#ctor(System.String)">
            <summary>
            Initialize a new instance of <see cref="T:_3Brain.BioCamDriver.BioCamSerial" />.
            </summary>
            <param name="serial">The BioCAM serial.</param>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSerial.IsValidSerial">
            <summary>
            Gets whether the serial is valid.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSerial.ValueInt">
            <summary>
            Gets the serial value in <see cref="T:System.Int32" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSerial.ValueString">
            <summary>
            Gets the serial value as a <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSerial.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
            <returns>True if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSerial.Equals(_3Brain.BioCamDriver.BioCamSerial)">
            <summary>
            Determines whether the specified <see cref="T:_3Brain.BioCamDriver.BioCamSerial" /> is equal to the current <see cref="T:_3Brain.BioCamDriver.BioCamSerial" />.
            </summary>
            <param name="value">The <see cref="T:_3Brain.BioCamDriver.BioCamSerial" /> to compare with the current <see cref="T:_3Brain.BioCamDriver.BioCamSerial" />.</param>
            <returns>True if the specified <see cref="T:_3Brain.BioCamDriver.BioCamSerial" /> is equal to the current <see cref="T:_3Brain.BioCamDriver.BioCamSerial" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSerial.Equals(_3Brain.BioCamDriver.BioCamSerial,_3Brain.BioCamDriver.BioCamSerial)">
            <summary>
            Determines whether the first <see cref="T:_3Brain.BioCamDriver.BioCamSerial" /> is equal to the second <see cref="T:_3Brain.BioCamDriver.BioCamSerial" />.
            </summary>
            <param name="s1">The first <see cref="T:_3Brain.BioCamDriver.BioCamSerial" /> to compare.</param>
            <param name="s2">The second <see cref="T:_3Brain.BioCamDriver.BioCamSerial" /> to compare.</param>
            <returns>True if the first <see cref="T:_3Brain.BioCamDriver.BioCamSerial" /> is equal to the second <see cref="T:_3Brain.BioCamDriver.BioCamSerial" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSerial.GetHashCode">
            <summary>
            Returns the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSerial.op_Equality(_3Brain.BioCamDriver.BioCamSerial,_3Brain.BioCamDriver.BioCamSerial)">
            <summary>
            Determines whether the first <see cref="T:_3Brain.BioCamDriver.BioCamSerial" /> is equal to the second <see cref="T:_3Brain.BioCamDriver.BioCamSerial" />.
            </summary>
            <param name="x">The first <see cref="T:_3Brain.BioCamDriver.BioCamSerial" /> to compare.</param>
            <param name="y">The second <see cref="T:_3Brain.BioCamDriver.BioCamSerial" /> to compare.</param>
            <returns>True if the first <see cref="T:_3Brain.BioCamDriver.BioCamSerial" /> is equal to the second <see cref="T:_3Brain.BioCamDriver.BioCamSerial" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSerial.op_Inequality(_3Brain.BioCamDriver.BioCamSerial,_3Brain.BioCamDriver.BioCamSerial)">
            <summary>
            Determines whether the first <see cref="T:_3Brain.BioCamDriver.BioCamSerial" /> is not equal to the second <see cref="T:_3Brain.BioCamDriver.BioCamSerial" />.
            </summary>
            <param name="x">The first <see cref="T:_3Brain.BioCamDriver.BioCamSerial" /> to compare.</param>
            <param name="y">The second <see cref="T:_3Brain.BioCamDriver.BioCamSerial" /> to compare.</param>
            <returns>True if the first <see cref="T:_3Brain.BioCamDriver.BioCamSerial" /> is not equal to the second <see cref="T:_3Brain.BioCamDriver.BioCamSerial" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSerial.IsValid(System.Int32)">
            <summary>
            Returns whether the serial is valid.
            </summary>
            <param name="serial">The serial value.</param>
            <returns>whether the serial is valid.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSerial.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSerial.ToString(System.Int32)">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <param name="nDigit">The number of digits.</param>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamSettingsAnalogInput1">
            <summary></summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamSettingsAnalogInput1.isChipCalibrationTriggerEnabled">
            <summary>
            Whether the trigging of the chip calibration is enabled.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamSettingsAnalogInput1.triggerLevelDigital">
            <summary>
            The trigger level in quantization levels.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamSettingsAnalogInput1.triggerDelayMs">
            <summary>
            The trigger delay in milliseconds.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettingsAnalogInput1.#ctor(_3Brain.BioCamDriver.BioCamSettings,_3Brain.BioCamDriver.BioCamIOSignal,_3Brain.Common.ChCoord,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.BioCamSettingsIOSignalBase" />.
            </summary>
            <param name="owner">The <see cref="T:_3Brain.BioCamDriver.BioCamSettings" /> owner.</param>
            <param name="ioSignal">The <see cref="T:_3Brain.BioCamDriver.BioCamIOSignal" />.</param>
            <param name="ch">The output <see cref="T:_3Brain.Common.ChCoord" />.</param>
            <param name="isOn">A boolean that establish whether the IO signal is on or off.</param>
            <param name="isChipCalibrationTriggerEnabled">A boolean that establish whether the chip calibration trigger is enabled.</param>
            <exception cref="T:System.ArgumentNullException">Throws when <paramref name="owner" /> is null.</exception>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettingsAnalogInput1.Constants">
            <summary>
            Gets settings constants.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettingsAnalogInput1.IsChipCalibrationTriggerEnabled">
            <summary>
            Gets or sets whether the trigging of the chip calibration is enabled.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettingsAnalogInput1.TriggerLevelDigital">
            <summary>
            Gets or sets the trigger level in quantization levels.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettingsAnalogInput1.TriggerLevelVolt">
            <summary>
            Gets or sets the trigger level in Volt.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettingsAnalogInput1.TriggerDelayMs">
            <summary>
            Gets or sets the trigger delay in milliseconds.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettingsAnalogInput1.LoadDefault">
            <summary>
            Loads the default settings values.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettingsAnalogInput1.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettingsAnalogInput1.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettingsAnalogInput1.CopyTo(_3Brain.Common.BaseSettings)">
            <summary>
            Copies all fields of the current object to the destination one.
            </summary>
            <param name="destObject">The destination object.</param>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamSettingsAnalogInput1Constants">
            <summary>
            Represents <see cref="T:_3Brain.BioCamDriver.BioCamSettingsAnalogInput1" /> constants.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamSettingsIOSignalBase">
            <summary>
            Defines the <see cref="T:_3Brain.BioCamDriver.BioCamIOSignal" /> settings.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettingsIOSignalBase.#ctor(_3Brain.BioCamDriver.BioCamSettings,_3Brain.BioCamDriver.BioCamIOSignal,_3Brain.Common.ChCoord,System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.BioCamSettingsIOSignalBase" />.
            </summary>
            <param name="owner">The <see cref="T:_3Brain.BioCamDriver.BioCamSettings" /> owner.</param>
            <param name="ioSignal">The <see cref="T:_3Brain.BioCamDriver.BioCamIOSignal" />.</param>
            <param name="ch">The output <see cref="T:_3Brain.Common.ChCoord" />.</param>
            <param name="isOn">A boolean that establish whether the IO signal is on or off.</param>
            <exception cref="T:System.ArgumentNullException">Throws when <paramref name="owner" /> is null.</exception>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettingsIOSignalBase.Constants">
            <summary>
            Gets settings constants.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettingsIOSignalBase.IOSignal">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.BioCamIOSignal" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettingsIOSignalBase.IsOn">
            <summary>
            Gets or sets whether the IO signal is on or off.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSettingsIOSignalBase.OutputCh">
            <summary>
            Gets or sets the IO signal output <see cref="T:_3Brain.Common.ChCoord" />.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettingsIOSignalBase.GetAvailableOutputChs">
            <summary>
            Returns the channels that are available to output this IO Signal, i.e. those channels that are not taken from other IO signals.
            </summary>
            <returns>The array of available channels.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettingsIOSignalBase.SetOutputChToFirstAvailable">
            <summary>
            Sets the output channel of this IO signal to the first channel among the available ones.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettingsIOSignalBase.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettingsIOSignalBase.CopyTo(_3Brain.Common.BaseSettings)">
            <summary>
            Copies all fields of the current object to the destination one.
            </summary>
            <param name="destObject">The destination object.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettingsIOSignalBase.LoadDefault">
            <summary>
            Loads the default settings values.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSettingsIOSignalBase.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamSettingsIOSignalBaseConstants">
            <summary>
            Represents <see cref="T:_3Brain.BioCamDriver.BioCamSettingsIOSignalBase" /> constants.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamUsbComSignalType">
            <summary>
            Enumerates the signal type that can be transmitted over the communication port with the BioCAM.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.CalTempTriplet">
            <summary>
            Define a triplet of a Celsius temperature, voltage set and voltage read used to perform temperature calibration.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.CalTempTriplet.Empty">
            <summary>
            Represents an empty <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" />. This field is read-only.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.CalTempTriplet.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" /> structure to the specified values.
            </summary>
            <param name="celsiusTemp">The temperature in Celsius degrees</param>
            <param name="vSet">The voltage set value that corresponds to the temperature, i.e. the voltage value typically set to the Peltier element.</param>
            <param name="vRead"> The voltage read value that corresponds to the temperature, i.e. the voltage value typically read from the sensor.</param>
        </member>
        <member name="P:_3Brain.BioCamDriver.CalTempTriplet.IsEmpty">
            <summary>
            Gets a value indicating whether the triplet is empty.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.CalTempTriplet.CelsiusTemp">
            <summary>
            Gets or sets the temperature in Celsius degrees.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.CalTempTriplet.VSet">
            <summary>
            Gets or sets the voltage set value that corresponds to the temperature, i.e. the voltage value typically set to the Peltier element.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.CalTempTriplet.VRead">
            <summary>
            Gets or sets the voltage read value that corresponds to the temperature, i.e. the voltage value typically read from the sensor.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.CalTempTriplet.ToBinary">
            <summary>
            Serializes the current <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" /> object to an array of bytes that subsequently can be used to recreate the <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" /> object.
            </summary>
            <returns>An array of bytes that encodes the <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" /> object.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.CalTempTriplet.FromBinary(System.Byte[])">
            <summary>
            Deserializes an array of bytes and recreates an original serialized <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" /> object.
            </summary>
            <param name="binary">An array of bytes that encodes in the first 2 bytes the temperature, in the following 4 bytes the voltage set value and in the final 4 bytes the voltage read value.</param>
            <returns>An object that is equivalent to the <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" /> object that was serialized by the <see cref="M:_3Brain.BioCamDriver.CalTempTriplet.ToBinary" /> method.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.CalTempTriplet.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.CalTempTriplet.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
            <returns>True if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.CalTempTriplet.Equals(_3Brain.BioCamDriver.CalTempTriplet)">
            <summary>
            Determines whether the specified <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" /> is equal to the current <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" />.
            </summary>
            <param name="value">The <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" /> to compare with the current <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" />.</param>
            <returns>True if the specified <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" /> is equal to the current <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.CalTempTriplet.Equals(_3Brain.BioCamDriver.CalTempTriplet,_3Brain.BioCamDriver.CalTempTriplet)">
            <summary>
            Determines whether the first <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" /> is equal to the second <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" />.
            </summary>
            <param name="t1">The first <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" /> to compare.</param>
            <param name="t2">The second <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" /> to compare.</param>
            <returns>True if the first <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" /> is equal to the second <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.CalTempTriplet.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.CalTempTriplet.op_Equality(_3Brain.BioCamDriver.CalTempTriplet,_3Brain.BioCamDriver.CalTempTriplet)">
            <summary>
            Return a value indicating whether the two <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" /> are equal.
            </summary>
            <param Name="x">First <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" /> to compare with second one.</param>
            <param Name="y">Second <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" /> to compare with first one.</param>
            <returns>A value indicating whether objects are equal.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.CalTempTriplet.op_Inequality(_3Brain.BioCamDriver.CalTempTriplet,_3Brain.BioCamDriver.CalTempTriplet)">
            <summary>
            Return a value indicating whether the two <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" /> are not equal.
            </summary>
            <param name="x">First <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" /> to compare with second one.</param>
            <param name="y">Second <see cref="T:_3Brain.BioCamDriver.CalTempTriplet" /> to compare with first one.</param>
            <returns>A value indicating whether objects are not equal.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.HyperCamBase">
            <summary>
            Defines an abstract HyperCAM based on a <see cref="T:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard" /> interface board.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.HyperCamBase.Tag">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.HyperCamTag" /> to store information on the HyperCAM RFID.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.CorePlate24WellTag">
            <summary>
            Represents a class managing the information stored inside the 24-well CorePlate RFID.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.CorePlate24WellTag.BioCam">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.HyperCamBase" /> owner.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.CorePlatePilot">
            <summary>
            Represents a CorePlate pilot. 
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.CorePlatePilot.IsConnected">
            <summary>
            Gets a value indicating whether the MEA plate is connected.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.CorePlatePilot.DoorStatus">
            <summary>
            Gets a <see cref="T:_3Brain.BioCamDriver.MeaPlateDoorStatus" /> indicating the boor status.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.CorePlatePilot.OpenDoorAsync">
            <summary>
            Return an asynchronous task for opening the door.
            </summary>
            <returns>The door opening <see cref="T:System.Threading.Tasks.Task" />.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.CorePlatePilot.CloseDoorAsync">
            <summary>
            Return an asynchronous task for closing the door.
            </summary>
            <returns>The door closing <see cref="T:System.Threading.Tasks.Task" />.</returns>
        </member>
        <member name="P:_3Brain.BioCamDriver.CorePlatePilot.LockStatus">
            <summary>
            Gets a <see cref="T:_3Brain.BioCamDriver.MeaPlateLockStatus" /> indicating the lock status.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.CorePlatePilot.LockPlateAsync">
            <summary>
            Return an asynchronous task for locking the plate.
            </summary>
            <returns>The plate locking <see cref="T:System.Threading.Tasks.Task" />.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.CorePlatePilot.UnlockPlateAsync">
            <summary>
            Return an asynchronous task for unlocking the plate.
            </summary>
            <returns>The plate unlocking <see cref="T:System.Threading.Tasks.Task" />.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.CorePlate6WellTag">
            <summary>
            Represents a class managing the information stored inside the 6-well CorePlate RFID.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.CorePlate6WellTag.BioCam">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.HyperCamBase" /> owner.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.CorePlate6WellTag.WellsCalibrationTemperatureCelsius">
            <summary>
            Gets or sets all 6-wells calibration temperature value in Celsius.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.CorePlate6WellTag.WellsTemperatureVolt">
            <summary>
            Gets or sets all 6-wells temperature value in Volt.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.CorePlate6WellTag.ClearTag">
            <summary>
            Resets all tags values.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.CorePlate6WellTag.ReadTag(System.Boolean)">
            <summary>
            Reads the whole tag.
            </summary>
            <param name="readTemperatures">Whether the temperature fields should be read.</param>
            <returns>True if reading is successful.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.CorePlate6WellTag.WriteTag(System.Boolean,System.Boolean)">
            <summary>
            Write the tag information.
            </summary>
            <param name="writeTemperatures">Whether the temperature fields should be written.</param>
            <param name="forceWritingAll">Whether all the fields should be written instead than writing only those that have changed from last check.</param>
            <returns>Whether the writing was successful.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.MeaPlateDoorStatus">
            <summary>
            Enumerates all MEA Plate door states.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.MeaPlateLockStatus">
            <summary>
            Enumerates all MEA Plate lock states.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamMessageType">
            <summary>
            Enumerates all BioCAM message types.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.IMeaPlatePilot">
            <summary>
            Defines a MEA plate pilot.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IMeaPlatePilot.IsConnected">
            <summary>
            Gets a value indicating whether the MEA plate is connected.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IMeaPlatePilot.Model">
            <summary>
            Gets the connected <see cref="T:_3Brain.Common.MeaPlateModel" /> whether it exists or null whether no plate is connected.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IMeaPlatePilot.Serial">
            <summary>
            Gets the serial of the MEA plate available on the source, or 0 in case no serial is available.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IMeaPlatePilot.Tag">
            <summary>
            The tag present on the plate.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IMeaPlatePilot.Settings">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.MeaPlateSettings" /> currently in use.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.IMeaPlatePilot.StartAmplifiersBiasingCalibration">
            <summary>
            Performs a single automatic calibration of amplifiers' biasing.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.IMeaPlatePilot.StopAmplifiersBiasingCalibration">
            <summary>
            Stop calibration of amplifiers' biasing.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.IMeaPlatePilot.SetAmplifiersBiasSoftAsync(System.Int16)">
            <summary>
            Set the amplifiers bias by gradually moving from the current value to the target one.
            </summary>
            <param name="offsetMilliVolt">The target new offset in milliVolt.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.IMeaPlatePilot.SetAmplifiersBiasHard(System.Int16)">
            <summary>
            Set the amplifiers bias hardly to the specified value.
            </summary>
            <param name="offsetMilliVolt">The offset in milliVolt.</param>
        </member>
        <member name="E:_3Brain.BioCamDriver.IMeaPlatePilot.AmplifiersBiasingCalibrationProgressChanged">
            <summary>
            Event fired when the amplifiers' biasing automatic calibration progress has changed.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.IMeaPlatePilot.AmplifiersBiasingCalibrationCompleted">
            <summary>
            Event fired when the amplifiers' biasing automatic calibration is completed.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.IMeaPlatePilot.MeaPlateStatusChanged">
            <summary>
            Event fired when the status of the plate changes.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.IMeaPlatePilot.MeaPlateEmptyTagInserted">
            <summary>
            Event fired when a MEA plate with an empty tag is inserted.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.MeaChipSettings">
            <summary>
            Represents a MEA chip settings.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.MeaChipSettings.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.MeaChipSettings" />.
            </summary>
            <param name="wellIdx"></param>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaChipSettings.WellIdx">
            <summary>
            Gets the chip well index.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaChipSettings.AmplifiersBiasMilliVolt">
            <summary>
            Gets or sets the chip amplifiers bias in millivolt (mV).
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaChipSettings.CalibrationBlankingValue">
            <summary>
            Gets or sets the chip calibration blanking value.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaChipSettings.Constants">
            <summary>
            Gets settings constants.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.MeaChipSettings.LoadDefault">
            <summary>
            Loads the default settings values.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.MeaChipSettingsConstants">
            <summary>
            Represents settings constants base class.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.MeaPlatePilotBase">
            <summary>
            Represents an abstract MEA plate pilot. 
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.MeaPlatePilotBase.tag">
            <summary>
            The <see cref="T:_3Brain.BioCamDriver.MeaPlateTagBase" /> containing information on the MEA plate connected to the BioCAM..
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.MeaPlatePilotBase.tagSyncRoot">
            <summary>
            Locking object for plate tag access.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.MeaPlatePilotBase.lastDateTimeTemperatureChanged">
            <summary>
            Last time a temperature was read and updated on the settings.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlatePilotBase.Model">
            <summary>
            Gets the connected <see cref="T:_3Brain.Common.MeaPlateModel" /> whether it exists or null whether no plate is connected.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlatePilotBase.TagSyncRoot">
            <summary>
            Gets locking object for plate tag access.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlatePilotBase.IsConnected">
            <summary>
            Gets a value indicating whether the MEA plate is connected.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlatePilotBase.Tag">
            <summary>
            The tag present on the plate.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlatePilotBase.Serial">
            <summary>
            Gets the serial of the MEA plate available on the source, or 0 in case no serial is available.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlatePilotBase.Settings">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.MeaPlateSettings" /> currently in use.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.MeaPlatePilotBase.StartAmplifiersBiasingCalibration">
            <summary>
            Performs a single automatic calibration of amplifiers' biasing.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.MeaPlatePilotBase.StopAmplifiersBiasingCalibration">
            <summary>
            Stop calibration of amplifiers' biasing.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.MeaPlatePilotBase.SetAmplifiersBiasSoftAsync(System.Int16)">
            <summary>
            Set the amplifiers bias by gradually moving from the current value to the target one.
            </summary>
            <param name="offsetMilliVolt">The target new offset in milliVolt.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.MeaPlatePilotBase.SetAmplifiersBiasHard(System.Int16)">
            <summary>
            Set the amplifiers bias hardly to the specified value.
            </summary>
            <param name="offsetMilliVolt">The offset in milliVolt.</param>
        </member>
        <member name="E:_3Brain.BioCamDriver.MeaPlatePilotBase.MeaPlateStatusChanged">
            <summary>
            Event fired when the status of the plate changes.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.MeaPlatePilotBase.MeaPlateEmptyTagInserted">
            <summary>
            Event fired when a MEA plate with an empty tag is inserted.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.MeaPlatePilotBase.AmplifiersBiasingCalibrationProgressChanged">
            <summary>
            Event fired when the amplifiers' biasing automatic calibration progress has changed.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.MeaPlatePilotBase.AmplifiersBiasingCalibrationCompleted">
            <summary>
            Event fired when the amplifiers' biasing automatic calibration is completed.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.MeaPlateTag">
            <summary>
            Represents a class managing the information stored inside the MEA plate RFID.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateTag.BioCam">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.BioCamDupleX" /> owner.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.MeaPlateTag.ClearTag">
            <summary>
            Resets all tags values.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.RfidPlatePilot">
            <summary>
            Represents a RFID MEA plate pilot. 
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.Properties.LocalizedStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.Properties.LocalizedStrings.InitError_Stim_Message">
            <summary>
              Looks up a localized string similar to Error while initializing stimulation..
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.Properties.LocalizedStrings.NotConnected_BioCam_Message">
            <summary>
              Looks up a localized string similar to Device is not connected..
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.Properties.LocalizedStrings.NotConnected_MeaPlate_Message">
            <summary>
              Looks up a localized string similar to Plate is not connected..
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.Properties.LocalizedStrings.NotInstalled_Stim_Message">
            <summary>
              Looks up a localized string similar to Device has no stimulation module installed..
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.Properties.LocalizedStrings.NotSupported_Stim_Message">
            <summary>
              Looks up a localized string similar to Device does not support stimulation..
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamVersion">
            <summary>
            Represents the BioCAM hardware and firmware version.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamVersion.Undefined">
            <summary>
            An undefined <see cref="T:_3Brain.BioCamDriver.BioCamVersion" />.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamVersion.#ctor(System.Version,System.Version)">
            <summary>
            Initialize a new instance of <see cref="T:_3Brain.BioCamDriver.BioCamVersion" /> with the specified versions.
            </summary>
            <param name="hardware">The hardware version of the BioCAM.</param>
            <param name="firmware">The firmware version of the BioCAM.</param>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamVersion.IsUndefined">
            <summary>
            Gets a value indicating whether the BioCAm version is undefined.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamVersion.Hardware">
            <summary>
            Gets or sets the hardware version of the BioCAM.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamVersion.Firmware">
            <summary>
            Gets or set the firmware version of the BioCAM.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamVersion.ToBinary">
            <summary>
            Serializes the BioCAM version into an array of bytes using Little-endian convention.
            </summary>
            <returns>The array of bytes.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamVersion.IsEmpty(_3Brain.BioCamDriver.BioCamVersion)">
            <summary>
            Determines whether the specified <see cref="T:_3Brain.BioCamDriver.BioCamVersion" /> is empty.
            </summary>
            <param name="bioCamVersion">The <see cref="T:_3Brain.BioCamDriver.BioCamVersion" /> to test.</param>
            <returns>Whether it is empty.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamVersion.FromBinary(System.Byte[])">
            <summary>
            Deserialize a <see cref="T:_3Brain.BioCamDriver.BioCamVersion" /> object from an array of bytes. Data inthe array are supposed to be in Little-endian notation.
            </summary>
            <param name="binary">The data to deserialize.</param>
            <returns>The BioCAM version.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamVersion.IsHwFwVersionValid(System.Version)">
            <summary>
            Determines whether the specified version, which can be either the version of the hardware or the version of the firmware of the BioCAM, is valid.
            </summary>
            <param name="version">The version to test.</param>
            <returns>True for a valid version; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamVersion.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
            <returns>True if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamVersion.GetHashCode">
            <summary>
            Returns the hash code for this object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamVersion.ToString">
            <summary>
            Convert the <see cref="T:_3Brain.BioCamDriver.BioCamVersion" /> in a representative string.
            </summary>
            <returns>Returns a string representative of the <see cref="T:_3Brain.BioCamDriver.BioCamVersion" />.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamVersion.Equals(_3Brain.BioCamDriver.BioCamVersion)">
            <summary>
            Determines whether the specified <see cref="T:_3Brain.BioCamDriver.BioCamVersion" /> is equal to the current <see cref="T:_3Brain.BioCamDriver.BioCamVersion" />.
            </summary>
            <param name="other">The <see cref="T:_3Brain.BioCamDriver.BioCamVersion" /> to compare with the current <see cref="T:_3Brain.BioCamDriver.BioCamVersion" />.</param>
            <returns>True if the specified <see cref="T:_3Brain.BioCamDriver.BioCamVersion" /> is equal to the current <see cref="T:_3Brain.BioCamDriver.BioCamVersion" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamVersion.op_Equality(_3Brain.BioCamDriver.BioCamVersion,_3Brain.BioCamDriver.BioCamVersion)">
            <summary>
            Return a value indicating whether the two <see cref="T:_3Brain.BioCamDriver.BioCamVersion" /> are equal.
            </summary>
            <param name="x">First <see cref="T:_3Brain.BioCamDriver.BioCamVersion" /> to compare with second one.</param>
            <param name="y">Second <see cref="T:_3Brain.BioCamDriver.BioCamVersion" /> to compare with first one.</param>
            <returns>A value indicating whether objects are equal.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamVersion.op_Inequality(_3Brain.BioCamDriver.BioCamVersion,_3Brain.BioCamDriver.BioCamVersion)">
            <summary>
            Return a value indicating whether the two <see cref="T:_3Brain.BioCamDriver.BioCamVersion" /> are not equal.
            </summary>
            <param name="x">First <see cref="T:_3Brain.BioCamDriver.BioCamVersion" /> to compare with second one.</param>
            <param name="y">Second <see cref="T:_3Brain.BioCamDriver.BioCamVersion" /> to compare with first one.</param>
            <returns>A value indicating whether objects are not equal.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamSupportedVersions">
            <summary>
            Represents a class defining the rules for supported BioCAM versions within a software.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSupportedVersions.#ctor(System.Collections.Generic.Dictionary{System.Int32,_3Brain.Common.VersionRange})">
            <summary>
            Initialize a new instance of <see cref="T:_3Brain.BioCamDriver.BioCamSupportedVersions" />.
            </summary>
            <param name="supportedVersions">The supported versions with keys being the supported hardware major versions, and values being, for each supported hw, the supported range of firmwares.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSupportedVersions.GetSupportedHardwareMajorVersions">
            <summary>
            Returns the supported hardware versions (only the major version is returned).
            </summary>
            <returns>The supported major versions.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSupportedVersions.GetSupportedFirmwareVersionsFor(_3Brain.BioCamDriver.BioCamVersion)">
            <summary>
            Gets the supported firmware versions range based on the BioCAM hardware version.
            </summary>
            <param name="version">The BioCAM version.</param>
            <returns>The supported firmware versions.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSupportedVersions.GetSupportedFirmwareVersionsFor(System.Version)">
            <summary>
            Gets the supported firmware versions range based on the BioCAM hardware version.
            </summary>
            <param name="hardwareVersion">The BioCAM hardware version.</param>
            <returns>The supported firmware versions.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSupportedVersions.IsHardwareVersionSupported(_3Brain.BioCamDriver.BioCamVersion)">
            <summary>
            Returns a value indicating whether the given BioCAM version has a hardware supported by this software.
            </summary>
            <param name="versionToCheck">The BioCAM version to check.</param>
            <returns>True is hardware version is supported; false, otherwise.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSupportedVersions.IsFirmwareVersionSupported(_3Brain.BioCamDriver.BioCamVersion)">
            <summary>
            Returns a value indicating whether the given BioCAM version has a firmware supported by this software.
            </summary>
            <param name="versionToCheck">The BioCAM version to check.</param>
            <returns>True is firmware version is supported; false, otherwise.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSupportedVersions.GetSupportedHardwareVersionString">
            <summary>
            Returns the supported hardware versions (only the major version is returned)
            </summary>
            <returns>The supported major versions.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.DataPacketHeader">
            <summary>
            Represents the header that is appended to any data received from the USB connected BioCAM.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.DataPacketHeader.SyncPattern">
            <summary>
            The sync pattern.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.DataPacketHeader.Reserved">
            <summary>
            Gets the reserved field.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.DataPacketHeader.SignalType">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.BioCamUsbComSignalType" /> of the data packet.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.DataPacketHeader.PayloadLength">
            <summary>
            Gets the length of the data payload this header refers to.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.DataPacketHeader.Timestamp">
            <summary>
            Gets the timestamp of the data packet in number of BioCAM's clock cycles or 0 when the timestamp is not available.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.DataPacketHeader.PacketCounter">
            <summary>
            Gets the progressive data packet counter.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.DataPacketHeader.#ctor(System.Byte[],System.Int32)">
            <summary>
            Creates a new <see cref="T:_3Brain.BioCamDriver.DataPacketHeader" /> with the given data.
            </summary>
            <param name="bytes">The array comprising the header.</param>
            <param name="startIndex">The start position within the array where the header starts.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.DataPacketHeader.#ctor">
            <summary>
            Create an empty header.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.DataPacketHeader.#ctor(System.Byte,_3Brain.BioCamDriver.BioCamUsbComSignalType,System.Int32,System.UInt64,System.UInt16)">
            <summary>
            Create a header with the given fields.
            </summary>
            <param name="reserved">The reserved field.</param>
            <param name="signalType">The <see cref="T:_3Brain.BioCamDriver.BioCamUsbComSignalType" /> of the data packet.</param>
            <param name="payloadLength">The length of the data this header refers to.</param>
            <param name="timestamp">The timestamp of the data packet in number of BioCAM's clock cycles or 0 when the timestamp is not available.</param>
            <param name="packetCounter">The progressive data packet counter.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.DataPacketHeader.#ctor(System.Int32,System.UInt16)">
            <summary>
            Create a header for <see cref="F:_3Brain.BioCamDriver.BioCamUsbComSignalType.RawMuxed" /> and with the given fields.
            </summary>
            <param name="payloadLength">The length of the data this header refers to.</param>
            <param name="packetCounter">The progressive data packet counter.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.DataPacketHeader.#ctor(_3Brain.BioCamDriver.DataPacketHeader)">
            <summary>
            Create a header by copying fields from the given header.
            </summary>
            <param name="header">The header to copy from.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.DataPacketHeader.CheckSync">
            <summary>
            Checks the initial sync pattern and returns a value indicating whether it is valid.
            </summary>
            <returns>True is header is synced; false, otherwise.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.DataPacketHeader.ToBinary">
            <summary>
            Returns the byte array of this header.
            </summary>
            <returns>The byte array.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.DataPacketHeader.CopyTo(System.Byte[],System.Int32)">
            <summary>
            Copy this header to the given array starting from the given position.
            </summary>
            <param name="array">The array the header will be copied to.</param>
            <param name="startIndex">The start index within the array where the copy will take place.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.DataPacketHeader.CopyFrom(_3Brain.BioCamDriver.DataPacketHeader)">
            <summary>
            Copy this header data to another header.
            </summary>
            <param name="header">The given header.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.DataPacketHeader.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard">
            <summary>
            Represents a FTDI USB3 communication interface board.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard.#ctor(System.UInt32,System.String,System.String)">
            <summary>
            Create a new instance of <see cref="T:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard.Model">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.InterfaceBoardModel" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard.IsNeedingActivePolling">
            <summary>
            Gets a value indicating whether the board required active polling in order to detect new inserted BioCAMs.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard.IsOpen">
            <summary>
            Gets a value indicating whether the interface board is open.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard.IsComPortInitialized">
            <summary>
            Gets a value indicating whether the communication port is initialized.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard.Open">
            <summary>
            Open the acquisition board.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard.Close">
            <summary>
            Close the interface board.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard.InitComPort">
            <summary>
            Initialize the serial communication.
            </summary>
            <exception cref="T:System.InvalidOperationException">Throws when the interface is not open.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard.ComPortWrite(System.Byte[],System.String)">
            <summary>
            Write the specified data to the serial port.
            </summary>
            <param name="data">The data to write.</param>
            <param name="logCategory">The category to use for logging purposes.</param>
            <exception cref="T:System.InvalidOperationException">Throws when the interface is not open, or the communication port is not initialized.</exception>
            <exception cref="T:_3Brain.BioCamDriver.InterfaceBoardException">Throws when a communication port error is found.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard.ComPortRead(System.Int32,System.Byte[]@,System.String)">
            <summary>
            Read the specified amount of data from the communication port. The returned data can be also shorter than specified length if not enough data is available on the communication port.
            </summary>
            <param name="length">The length of data to read.</param>
            <param name="data">The read data.</param>
            <param name="logCategory">The category to use for logging purposes.</param>
            <exception cref="T:System.InvalidOperationException">Throws when the interface is not open, or the communication port is not initialized.</exception>
            <exception cref="T:_3Brain.BioCamDriver.InterfaceBoardException">Throws when a communication port error is found.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard.CloseComPort">
            <summary>
            Close the communication port.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard.StartStreaming(_3Brain.BioCamDriver.BioCamDataFormat)">
            <summary>
            Start the interface board.
            </summary>
            <param name="dataProtocol">The protocol used to transfer the data.</param>
            <exception cref="T:System.InvalidOperationException">Throws when the interface is not open.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard.StopStreaming">
            <summary>
            Stop the interface board.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard.Equals(_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard)">
            <summary>
            Determines whether the specified <see cref="T:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard" /> is equal to the current <see cref="T:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard" />.
            </summary>
            <param name="other">The <see cref="T:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard" /> to compare with the current <see cref="T:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard" />.</param>
            <returns>True if the specified <see cref="T:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard" /> is equal to the current <see cref="T:_3Brain.BioCamDriver.FtdiUsb3InterfaceBoard" />; otherwise, false.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.InterfaceBoardBase">
            <summary>
            Represents an abstract communication interface board.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.InterfaceBoardBase.BUFFER_N_CHUNKS">
            <summary>
            The number of data chunks that are contained in the acquisition buffer, where a data chunk is the piece of data transferred from the interface board every acquisition cycle.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.InterfaceBoardBase.ACQ_BUFFER_CRITICAL_LEVEL">
            <summary>
            The level at which the acquisition buffer is considered to be in a critical state.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.InterfaceBoardBase.DEFAULT_DATARATE_MEASURED_EVENT_RAISE_PERIOD_MS">
            <summary>
            The default period in milliseconds to raise the <see cref="E:_3Brain.BioCamDriver.InterfaceBoardBase.DataRateMeasured" /> event.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.InterfaceBoardBase.dataRateMeasuredEventRaisePeriodMs">
            <summary>
            The period in milliseconds to raise the <see cref="E:_3Brain.BioCamDriver.InterfaceBoardBase.DataRateMeasured" /> event.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.InterfaceBoardBase.syncCom">
            <summary>
            Object for synchronization.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.InterfaceBoardBase.dataProtocol">
            <summary>
            The protocol used to read data from the interface board.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.InterfaceBoardBase.serialNumber">
            <summary>
            The board serial number.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.InterfaceBoardBase.isStreaming">
            <summary>
            Whether data is streamed from the board.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.InterfaceBoardBase.#ctor">
            <summary>
            Create a new instance of <see cref="T:_3Brain.BioCamDriver.InterfaceBoardBase" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.InterfaceBoardBase.Model">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.InterfaceBoardModel" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.InterfaceBoardBase.IsNeedingActivePolling">
            <summary>
            Gets a value indicating whether the board required active polling in order to detect new inserted BioCAMs.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.InterfaceBoardBase.SerialNumber">
            <summary>
            Gets the serial number of the board.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.InterfaceBoardBase.IsOpen">
            <summary>
            Gets a value indicating whether the interface board is open.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.InterfaceBoardBase.IsComPortInitialized">
            <summary>
            Gets a value indicating whether the communication port is initialized.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.InterfaceBoardBase.DataProtocol">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.BioCamDataFormat" /> that defines how data is transferred.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.InterfaceBoardBase.Open">
            <summary>
            Open the acquisition board.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.InterfaceBoardBase.TryOpen">
            <summary>
            Try to open the interface board.
            </summary>
            <returns>Whether the board was successfully open.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.InterfaceBoardBase.Close">
            <summary>
            Close the interface board.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.InterfaceBoardBase.InitComPort">
            <summary>
            Initialize the serial communication.
            </summary>
            <exception cref="T:System.InvalidOperationException">Throws when the interface is not open.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.InterfaceBoardBase.ComPortWrite(System.Byte[],System.String)">
            <summary>
            Write the specified data to the serial port.
            </summary>
            <param name="data">The data to write.</param>
            <param name="logCategory">The category to use for logging purposes.</param>
            <exception cref="T:System.InvalidOperationException">Throws when the interface is not open, or the communication port is not initialized.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.InterfaceBoardBase.ComPortRead(System.Int32,System.Byte[]@,System.String)">
            <summary>
            Read the specified amount of data from the communication port. The returned data can be also shorter than specified length if not enough data is available on the communication port.
            </summary>
            <param name="length">The length of data to read.</param>
            <param name="data">The read data.</param>
            <param name="logCategory">The category to use for logging purposes.</param>
            <exception cref="T:System.InvalidOperationException">Throws when the interface is not open, or the communication port is not initialized.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.InterfaceBoardBase.ComPortFlush">
            <summary>
            Flush data eventually present on the serial port.
            </summary>
            <exception cref="T:System.InvalidOperationException">Throws when the interface is not open, or the communication port is not initialized.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.InterfaceBoardBase.CloseComPort">
            <summary>
            Close the communication port.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.InterfaceBoardBase.StartStreaming(_3Brain.BioCamDriver.BioCamDataFormat)">
            <summary>
            Start the interface board.
            </summary>
            <param name="dataProtocol">The protocol used to transfer the data.</param>
            <exception cref="T:System.InvalidOperationException">Throws when the interface is not open.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.InterfaceBoardBase.StopStreaming">
            <summary>
            Stop the interface board.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.InterfaceBoardBase.DataReceived">
            <summary>
            Fires when a new chunk of data is acquired.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.InterfaceBoardBase.DataLoss">
            <summary>
            Fires when an acquisition data loss occurs.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.InterfaceBoardBase.DataStreamingError">
            <summary>
            Fires when an acquisition unrecoverable error occurs.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.InterfaceBoardBase.DataRateMeasured">
            <summary>
            Fires when a data rate value is measured.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.InterfaceBoardBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.InterfaceBoardBase.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.InterfaceBoardException">
            <summary>
            Represents an error on the interface board that occur during application execution.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.MeaPlateTagBase">
            <summary>
            Represents an abstract class managing the information stored inside the MEA plate RFID.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateTagBase.IsEmpty">
            <summary>
            Gets a value indicating whether the tag is empty (does not contain data).
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateTagBase.IsInitialized">
            <summary>
            Gets a value indicating whether the tag is initialized or whether it needs to be written for the first time.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateTagBase.Model">
            <summary>
            Gets or sets the model of the plate.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateTagBase.Serial">
            <summary>
            Gets or sets the plate identification number.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateTagBase.OperatingTimeMinutes">
            <summary>
            Gets or sets the operating time, that is the minutes of use.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.MeaPlateTagBase.ReadSerial">
            <summary>
            Reads the serial.
            </summary>
            <returns>True if reading is successful.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.MeaPlateTagBase.WriteSerial">
            <summary>
            Writes the serial.
            </summary>
            <returns>True if reading is successful.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.MeaPlateTagBase.ClearTag">
            <summary>
            Resets all tags values.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.MeaPlateTagBase.NewDataWritten">
            <summary>
            Fires when new tag data is written.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.ComPortUtils">
            <summary>
            Contains utility methods to be used to communicate with the BioCAM through the communication port.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamInfoEventArgs">
            <summary>
            Event arguments data for event carrying information on the BioCAM.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamInfoEventArgs.Serial">
            <summary>
            Gets BioCAM serial.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamConnectionStatusChangedEventArgs">
            <summary>
            Event arguments data for the <see cref="E:_3Brain.BioCamDriver.IBioCam.BioCamConnectionStatusChanged" /> event.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamConnectionStatusChangedEventArgs.IsConnected">
            <summary>
            Gets whether the BioCAM is connected.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.NewBioCamArrivedEventArgs">
            <summary>
            Event arguments data for the <see cref="E:_3Brain.BioCamDriver.BioCamPool.NewBioCamArrived" /> event.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.NewBioCamArrivedEventArgs.SlotIndex">
            <summary>
            Get the BioCAM slot index on the <see cref="T:_3Brain.BioCamDriver.BioCamPool" />.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.NewBioCamUsbArrivedEventArgs">
            <summary>
            Event arguments data for the <see cref="E:_3Brain.BioCamDriver.BioCamPool.NewBioCamArrived" /> event.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.NewBioCamUsbArrivedEventArgs.InterfaceBoard">
            <summary>
            Gets the FTDI interface board associated to the <see cref="T:_3Brain.BioCamDriver.BioCamUsbBase" />.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.MeaPlateStatusChangedEventArgs">
            <summary>
            Event arguments data for the <see cref="E:_3Brain.BioCamDriver.IMeaPlatePilot.MeaPlateStatusChanged" /> event.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.MeaPlateStatusChangedEventArgs.ConnectedMeaPlateModel">
            <summary>
            The connected MEA plate model whether it exists or null in case no plate is connected.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.MeaPlateStatusChangedEventArgs.MeaPlateSerial">
            <summary>
            The serial number of the MEA plate.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateStatusChangedEventArgs.IsMeaPlateConnected">
            <summary>
            Whether the plate is connected.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.MeaPlateStatusChangedEventArgs.IsActiveTempSensorCalibrated">
            <summary>
            A value indicating whether the currently active temperature sensor is calibrated, hence whether the temperature can be read in Celsius degrees.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.MeaPlateStatusChangedEventArgs.#ctor(System.Nullable{_3Brain.Common.MeaPlateModel},System.UInt32,System.Boolean,_3Brain.BioCamDriver.BioCamSerial)">
            <summary>
            Initialize a new instance of <see cref="T:_3Brain.BioCamDriver.MeaPlateStatusChangedEventArgs" /> with the specified connected MEA plate, whether it exists.
            </summary>
            <param name="connectedMeaPlateModel">The connected chip model.</param>
            <param name="meaPlateSerial">The serial number of the MEA chip.</param>
            <param name="isActiveTempSensorCalibrated">Whether the temperature sensor is calibrated.</param>
            <param name="bioCamSerial">The serial of the BioCAM.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.MeaPlateStatusChangedEventArgs.#ctor(System.Nullable{_3Brain.Common.MeaPlateModel},_3Brain.BioCamDriver.BioCamSerial)">
            <summary>
            Initialize a new instance of <see cref="T:_3Brain.BioCamDriver.MeaPlateStatusChangedEventArgs" /> with the specified connected MEA plate, whether it exists.
            </summary>
            <param name="connectedMeaPlateModel">&gt;The connected chip model.</param>
            <param name="serial">The serial of the BioCAM.</param>
        </member>
        <member name="T:_3Brain.BioCamDriver.MeaPlateEmptyTagInsertedEventArgs">
            <summary>
            Event arguments data for the <see cref="E:_3Brain.BioCamDriver.IMeaPlatePilot.MeaPlateEmptyTagInserted" /> event.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateEmptyTagInsertedEventArgs.BioCam">
            <summary>
            Gets the BioCAM instance.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateEmptyTagInsertedEventArgs.PlateTag">
            <summary>
            Gets the BioCAM plate tag.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamSendingCommandEventArgs">
            <summary>
            Event arguments data for the <see cref="E:_3Brain.BioCamDriver.IBioCam.SendingCommand" /> event.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSendingCommandEventArgs.Command">
            <summary>
            Gets the command value (uint16).
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSendingCommandEventArgs.Msg">
            <summary>
            Gets the send message (bytes[]).
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamMessageEventArgs">
            <summary>
            Event arguments data for the <see cref="E:_3Brain.BioCamDriver.IBioCam.BioCamMessageSent" /> event.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamMessageEventArgs.Message">
            <summary>
            Gets the message text.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamMessageEventArgs.Type">
            <summary>
            Gets the message type.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.ValidatingIOSignalPropertyChangingEventArgs">
            <summary>
            Event arguments data for the <see cref="E:_3Brain.BioCamDriver.BioCamSettings.ValidatingIOSignalPropertyChanging" /> event.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.ValidatingIOSignalPropertyChangingEventArgs.Signal">
            <summary>
            Gets the IO signal whose property is changing.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamPool">
            <summary>
            Represents a <see cref="T:_3Brain.BioCamDriver.IBioCam" /> pool.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamPool.SupportedBioCamVersions">
            <summary>
            Gets a class defining the rules for supported BioCAM versions within a software.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamPool.IsActive">
            <summary>
            Gets a value indicating whether the <see cref="T:_3Brain.BioCamDriver.BioCamPool" /> is active.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamPool.SupportBioCamWithInvalidSerial">
            <summary>
            Gets whether the BioCAM pool should support BioCAM with non valid serial.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamPool.NBioCamSlots">
            <summary>
            Gets the number of slots to host a BioCAM.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamPool.NOpenBoards">
            <summary>
            Gets the number of open boards in the system.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamPool.NBioCams">
            <summary>
            Gets the number of BioCAMs connected to the system.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamPool.NFreeBioCams">
            <summary>
            Gets the number of free BioCAMs, i.e. of those whose ownership can be taken.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamPool.BioCamSlotInfo">
            <summary>
            Gets an array containing information on each available BioCAM slot (the number of BioCAM slot equals or is greater to the number of open boards).
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamPool.AllBioCamsHaveValidSerials">
            <summary>
            Gets a boolean indicating whether all the connected BioCAMs have a valid serial number.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamPool.Activate(System.Boolean)">
            <summary>
            Activate the <see cref="T:_3Brain.BioCamDriver.BioCamPool" /> to start discovering the BioCAMs connected to the system.
            </summary>
            <param name="supportBioCamInvalidSerial">Whether a BioCAM with a non valid serial (not initialized) should be supported.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamPool.Deactivate">
            <summary>
            Deactivate the <see cref="T:_3Brain.BioCamDriver.BioCamPool" />.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamPool.OpenBoard(System.Int32)">
            <summary>
            Open the interface board at the specified index.
            </summary>
            <param name="slotIndex">The slot index of the board.</param>
            <returns>True whether the operation was successful; false, otherwise.</returns>
            <exception cref="T:System.ArgumentException">Throws when <paramref name="slotIndex" /> is invalid.</exception>
            <exception cref="T:System.InvalidOperationException">Throws when no board is available at the given <paramref name="slotIndex" />.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamPool.CloseBoard(System.Int32)">
            <summary>
            Close the interface board at the specified index.
            </summary>
            <param name="slotIndex">The slot index of the board.</param>
            <returns>True whether the operation was successful; false, otherwise.</returns>
            <exception cref="T:System.ArgumentException">Throws when <paramref name="slotIndex" /> is invalid.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamPool.TakeBioCamControl(System.Int32)">
            <summary>
            Take control of the BioCAM at the specified slot index.
            </summary>
            <param name="slotIndex">The slot index.</param>
            <returns>The <see cref="T:_3Brain.BioCamDriver.IBioCam" /> associated to the slot index.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamPool.ReleaseBioCamControl(System.Int32)">
            <summary>
            Releases the control of the BioCAM at the specified slot index.
            </summary>
            <param name="slotIndex">The slot index.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamPool.TakeFirstFreeBioCamControl">
            <summary>
            Take control of the first free BioCAM.
            </summary>
            <returns>The <see cref="T:_3Brain.BioCamDriver.IBioCam" />.</returns>
            <see cref="T:_3Brain.BioCamDriver.TakeBioCamControlExceptions">Thrown when no free BioCAM is available.</see>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamPool.GetSlotIndexesFreeBioCam">
            <summary>
            Returns the slot indexes of the free BioCAMs.
            </summary>
            <returns>The array containing the slot indexes.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamPool.GetSlotIndexesConnectedBioCam">
            <summary>
            Returns the slot indexes containing connected BioCAMs.
            </summary>
            <returns>The array containing the slot indexes.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamPool.GetSlotIndexesBioCam">
            <summary>
            Returns the slot indexes containing BioCAMs, comprising those in faulty state.
            </summary>
            <returns>The array containing the slot indexes.</returns>
        </member>
        <member name="E:_3Brain.BioCamDriver.BioCamPool.BioCamsStatusChanged">
            <summary>
            Fires when a <see cref="T:_3Brain.BioCamDriver.IBioCam" /> status changed.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.BioCamPool.MeaPlateEmptyTagInserted">
            <summary>
            Fires when an empty <see cref="T:_3Brain.BioCamDriver.MeaPlateTagBase" /> plate is inserted.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.BioCamPool.NewBioCamArrived">
            <summary>
            Fires when a new <see cref="T:_3Brain.BioCamDriver.IBioCam" /> is inserted. If is an USB device, the <see cref="T:System.EventArgs" /> are <see cref="T:_3Brain.BioCamDriver.NewBioCamUsbArrivedEventArgs" />.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.BioCamPool.BioCamRequiringDriverInstallationArrived">
            <summary>
            Fires when a new <see cref="T:_3Brain.BioCamDriver.IBioCam" /> is inserted and the driver installation is required.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamSlotInfo">
            <summary>
            Collects information on BioCAMs slots that are available in the system.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSlotInfo.#ctor(_3Brain.BioCamDriver.BioCamBase,System.Int32)">
            <summary>
            Create a new instance of <see cref="T:_3Brain.BioCamDriver.BioCamSlotInfo" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.InterfaceBoard">
            <summary>
            Gets the interface board the BioCAM is attached to or null in case no interface board is currently in use.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.Tag">
            <summary>
            Gets the associated <see cref="T:_3Brain.BioCamDriver.BioCamTagBase" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.HasInterfaceBoard">
            <summary>
            Gets a value indicating whether an interface board is associated (but not necessarily open).
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.IsInterfaceBoardOpen">
            <summary>
            Gets a value indicating whether the interface board is present and open.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.SlotIndex">
            <summary>
            Gets the its slot index on the <see cref="T:_3Brain.BioCamDriver.BioCamPool" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.InterfaceBoardSerialNumber">
            <summary>
            Gets the serial number of the interface board the BioCAM is associated to, whenever the BioCAM exists; otherwise returns an empty string.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.HasBioCamInFaultyState">
            <summary>
            Gets a value indicating whether a BioCAM is associated but it is in faulty state.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.HasBioCam">
            <summary>
            Gets a value indicating whether a BioCAM is associated (but not necessarily connected).
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.IsBioCamFree">
            <summary>
            Gets a value indicating whether the associated BioCAM is free, that is its control can be taken. If no BioCAM is associated the returned value is always false.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.IsBioCamAvailable">
            <summary>
            Gets a value indicating whether the associated BioCAM is available, which means it is free (not taken) and connected.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.BioCamModel">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.BioCamModel" /> of the associated BioCAM.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.SerialNumber">
            <summary>
            Gets the serial number of the associated BioCAM.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSlotInfo.HasBioCamWith(_3Brain.BioCamDriver.BioCamModel,System.Int32)">
            <summary>
            Gets a value indicating whether a BioCAM with the given <see cref="P:_3Brain.BioCamDriver.BioCamSlotInfo.BioCamModel" /> and serial is associated (but not necessarily connected).
            </summary>
            <param name="model">The <see cref="P:_3Brain.BioCamDriver.BioCamSlotInfo.BioCamModel" />.</param>
            <param name="serial">The serial.</param>
            <returns>True if the BioCAM with the given model and serial is associated; false, otherwise.</returns>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.IsBioCamConnected">
            <summary>
            Gets a value indicating whether the associated BioCAM is connected.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.IsMeaPlateConnected">
            <summary>
            Gets a value indicating whether the associated BioCAM has its BioPlate connected.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.ConnectedMeaPlateModel">
            <summary>
            Gets the connected <see cref="T:_3Brain.Common.MeaPlateModel" /> or null in case no plate is connected.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.ConnectedMeaPlateSerial">
            <summary>
            Gets the serial of the connected MEA plate or 0 in case no plate is connected.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.BioCamVersion">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.BioCamVersion" /> of the associated <see cref="P:_3Brain.BioCamDriver.BioCamSlotInfo.BioCam" /> whether it exists.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.IsBioCamHardwareVersionSupported">
            <summary>
            Gets a value indicating whether the version of the BioCAM hardware is supported by the current driver. If not the BioCAM cannot be used with the this software.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.IsBioCamBooting">
            <summary>
            Gets a value indicating whether the BioCAM is currently booting.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.IsBioCamInFaultyState">
            <summary>
            Gets a value indicating whether the BioCAM is in a faulty state, possibly because of firmware issues.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.IsBioCamFirmwareVersionSupported">
            <summary>
            Gets a value indicating whether the version of the BioCAM firmware is supported by the current driver. If not the BioCAM can still be used by installing a new firmware whether available.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.IsSerialValid">
            <summary>
            Gets a value indicating whether the serial number of the BioCAM is valid (neither uninitialized nor undefined).
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.SlotAndSerialNumber">
            <summary>
            Gets a string with the serial number and the slot taken by the BioCAM.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.CommercialModel">
            <summary>
            Gets a string with the commercial name of the BioCAM.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.SerialNumberAndVersion">
            <summary>
            Gets a string with the serial number and the version of the BioCAM.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamSlotInfo.FullDescriptiveText">
            <summary>
            Gets the descriptive text of the current BioCAM.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSlotInfo.DoesBioCamSupportFunc(_3Brain.BioCamDriver.BioCamFunc)">
            <summary>
            Returns a value indicating whether the BioCAM supports the specified <see cref="T:_3Brain.BioCamDriver.BioCamFunc" />.
            </summary>
            <param name="func">The function to check.</param>
            <returns>Whether the function is supported.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSlotInfo.HasBioCamStimulator">
            <summary>
            Returns a value indicating whether the BioCAM has the stimulator available.
            </summary>
            <returns>Whether the stimulator is available.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSlotInfo.TakeControl">
            <summary>
            Takes the control and returns the associated BioCAM.
            </summary>
            <returns>The associated BioCAM.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when no BioCAM is associated.</exception>
            <exception cref="T:_3Brain.BioCamDriver.TakeBioCamControlExceptions">Thrown when the ownership of the associated BioCAM is already taken.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSlotInfo.ReleaseControl">
            <summary>
            Releases the control on the associated BioCAM.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSlotInfo.UpdateUsbBioCamAsync(System.Byte[],System.IProgress{System.Int32})">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task" /> updating a BioCAM from a binary file.
            </summary>
            <param name="updateFile">The firmware file in bytes.</param>
            <param name="progress">The progress report interface.</param>
            <returns>The BioCAM updating <see cref="T:System.Threading.Tasks.Task" />.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when no BioCAM is associated or is invalid.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSlotInfo.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamDupleXStimProtocolManager">
            <summary>
            Represents BiorCAM DupleX stimulator protocol manager.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamDupleXStimProtocolManager.MaxProtocols">
            <summary>
            Gets the maximum number of protocols that can be loaded inside the stimulator.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamStimBase">
            <summary>
            Defines an abstract BioCAM stimulator.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamStimBase.Settings">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.BioCamStimSettings" /> used for the stimulator.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamStimBase.Properties">
            <summary>
            Gets the <see cref="T:_3Brain.Common.StimProperties" /> compatible with the stimulator.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamStimBase.EndPoints">
            <summary>
            Gets the available <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> that can be used with the given stimulation channel.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamStimBase.TimeResolutionMicroSec">
            <summary>
            Gets the time resolution of the stimulator in microseconds.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamStimBase.AmplitudeResolutionUM">
            <summary>
            Gets the amplitude resolution for the stimulator in the used unit measure (current: micro-Ampere, voltage: micro-Volt).
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamStimBase.Protocol">
            <summary>
            Gets the stimulator protocol manager.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamStimBase.IsInitialized">
            <summary>
            Gets whether the stimulator is initialized or not.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamStimBase.IsStimulating">
            <summary>
            Gets whether the stimulator is running.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamStimBase.MaxPulseCount">
            <summary>
            Gets the maximum number of stimulus pulses that can be loaded inside the stimulator's internal memory.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimBase.GetReferenceElectrodeEndPoint">
            <summary>
            Gets the reference electrode's <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.
            </summary>
            <returns>The requested endpoint.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimBase.GetExternalEndPoint(_3Brain.BioCamDriver.BioCamStimExternalEndPoint)">
            <summary>
            Gets the corresponding external <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> from a given <see cref="T:_3Brain.BioCamDriver.BioCamStimExternalEndPoint" />.
            </summary>
            <param name="ep">The <see cref="T:_3Brain.BioCamDriver.BioCamStimExternalEndPoint" />.</param>
            <returns>The requested endpoint.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimBase.GetInternalEndPoint(_3Brain.Common.ChCoord)">
            <summary>
            Gets the corresponding internal <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> from a given <see cref="T:_3Brain.Common.ChCoord" />.
            </summary>
            <param name="ep">The <see cref="T:_3Brain.Common.ChCoord" />.</param>
            <returns>The requested endpoint.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimBase.GetEndPointById(System.Int64)">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> corresponding to the given terminal identifier.
            </summary>
            <param name="endPointId">The terminal identifier.</param>
            <returns>The requested endpoint.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimBase.GetEndPointByName(System.String)">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> corresponding to the given terminal name.
            </summary>
            <param name="endPointName">The terminal name.</param>
            <returns>The requested endpoint.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimBase.IsAvailable">
            <summary>
            Returns a value indicating whether the stimulator module is available.
            </summary>
            <returns>Whether the stimulator module is available.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimBase.Initialize(_3Brain.BioCamDriver.StimProtocolType)">
            <summary>
            Initializes the stimulator for the first time and returns a value indicating whether the operation was successful.
            </summary>
            <param name="protocolType">The protocol type.</param>
            <returns>Whether the stimulator initialized successfully.</returns>
            <exception cref="T:System.InvalidOperationException">Throws when stimulator is already initialized.</exception>
            <exception cref="T:System.ArgumentException">Throws when <see cref="T:_3Brain.BioCamDriver.StimProtocolType" /> in not supported.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimBase.Close">
            <summary>
            Closes the stimulator and returns a value indicating whether the operation was successful.
            </summary>
            <returns>Whether the stimulator closed successfully.</returns>
            <exception cref="T:System.InvalidOperationException">Throws when stimulator is not initialized.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimBase.Start">
            <summary>
            Start the stimulator and returns a value indicating whether the operation was successful. 
            </summary>
            <returns>Whether the stimulator started successfully.</returns>
            <exception cref="T:System.InvalidOperationException">Throws when stimulator has already started or <see cref="P:_3Brain.BioCamDriver.BioCamStimBase.ProtocolType" /> is not supported.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimBase.Send(_3Brain.Common.RectangularStimPulse,_3Brain.BioCamDriver.StimEndPoint[],_3Brain.BioCamDriver.StimEndPoint[])">
            <remarks>
                <para>
            When this method is invoked, each argument passed to the BioCAM is stored on a corresponding internal memory buffer. Be aware of the size of the stimulation arguments that you are passing, because the individual memory buffers might overflow. Any time that one of these memory buffers overflows will cause the next invocation of the method to not consider the new argument values.
            </para>
                <para>
            Following here you can see the maximum number of values allowed for each values type.
            </para>
                <list type="bullet">
                    <item>
                        <term>
                            <see cref="T:_3Brain.Common.RectangularStimPulse" />
                        </term>
                        <description>Up to 64 values.</description>
                    </item>
                    <item>
                        <term>
                            <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />
                        </term>
                        <description>Up to 288 values.</description>
                    </item>
                </list>
            </remarks>
            <summary>
            Sends an immediate stimulation pulse.
            </summary>
            <param name="pulse">The pulse configuration.</param>
            <param name="positiveEndPoints">The array of positive <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.</param>
            <param name="negativeEndPoints">The array of negative <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.</param>
            <returns>Whether the stimulation values were send successfully.</returns>
            <exception cref="T:System.InvalidOperationException">Throws when the stimulator has not started.</exception>
            <exception cref="T:System.ArgumentNullException">Throws when <see cref="T:_3Brain.Common.RectangularStimPulse" /> is null.</exception>
            <exception cref="T:System.ArgumentException">Throws when <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> are invalid.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimBase.Send(_3Brain.Common.RectangularStimPulse,_3Brain.BioCamDriver.StimEndPoint[],_3Brain.BioCamDriver.StimEndPoint[],System.UInt64@)">
            <remarks>
                <para>
            When this method is invoked, each argument passed to the BioCAM is stored on a corresponding internal memory buffer. Be aware of the size of the stimulation arguments that you are passing, because the individual memory buffers might overflow. Any time that one of these memory buffers overflows will cause the next invocation of the method to not consider the new argument values.
            </para>
                <para>
            Following here you can see the maximum number of values allowed for each values type.
            </para>
                <list type="bullet">
                    <item>
                        <term>
                            <see cref="T:_3Brain.Common.RectangularStimPulse" />
                        </term>
                        <description>Up to 64 values.</description>
                    </item>
                    <item>
                        <term>
                            <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />
                        </term>
                        <description>Up to 288 values.</description>
                    </item>
                </list>
            </remarks>
            <summary>
            Sends an immediate stimulation pulse.
            </summary>
            <param name="pulse">The pulse configuration.</param>
            <param name="positiveEndPoints">The array of positive <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.</param>
            <param name="negativeEndPoints">The array of negative <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.</param>
            <param name="latency">Accounts for the time to program all <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />. Latency is expressed in clock cycles relative to the beginning of the acquisition.</param>
            <returns>Whether the stimulation values were send successfully.</returns>
            <exception cref="T:System.InvalidOperationException">Throws when the stimulator has not started.</exception>
            <exception cref="T:System.ArgumentNullException">Throws when <see cref="T:_3Brain.Common.RectangularStimPulse" /> is null.</exception>
            <exception cref="T:System.ArgumentException">Throws when <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> are invalid.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimBase.Send(_3Brain.Common.RectangularStimPulse,_3Brain.BioCamDriver.StimEndPoint[],_3Brain.BioCamDriver.StimEndPoint[],System.Double[])">
            <remarks>
                <para>
            When this method is invoked, each argument passed to the BioCAM is stored on a corresponding internal memory buffer. Be aware of the size of the stimulation arguments that you are passing, because the individual memory buffers might overflow. Any time that one of these memory buffers overflows will cause the next invocation of the method to not consider the new argument values.
            </para>
                <para>
            Following here you can see the maximum number of values allowed for each values type.
            </para>
                <list type="bullet">
                    <item>
                        <term>
                            <see cref="T:_3Brain.Common.RectangularStimPulse" />
                        </term>
                        <description>Up to 64 values.</description>
                    </item>
                    <item>
                        <term>
                            <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />
                        </term>
                        <description>Up to 288 values.</description>
                    </item>
                    <item>
                        <term>Time-stamps</term>
                        <description>Up to 1024 values.</description>
                    </item>
                </list>
            </remarks>
            <summary>
            Sends stimulation pulses.
            </summary>
            <param name="pulse">The pulse configuration.</param>
            <param name="positiveEndPoints">The array of positive <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.</param>
            <param name="negativeEndPoints">The array of negative <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.</param>
            <param name="timestamps">The ordered array of pulse time-stamps in microsecond relative to the beginning of the acquisition.</param>
            <returns>Whether the stimulation values were send successfully.</returns>
            <exception cref="T:System.InvalidOperationException">Throws when the stimulator has not started.</exception>
            <exception cref="T:System.ArgumentNullException">Throws when <see cref="T:_3Brain.Common.RectangularStimPulse" /> is null.</exception>
            <exception cref="T:System.ArgumentException">Throws when <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> or the time-stamps are invalid.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimBase.Stop">
            <summary>
            Stop the stimulator and returns a value indicating whether the operation was successful.
            </summary>
            <returns>Whether the stimulator stopped successfully.</returns>
            <exception cref="T:System.InvalidOperationException">Throws when the stimulator has not started.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamBase">
            <summary>
            Defines an abstract BioCAM base class.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamBase.syncRoot">
            <summary>
            The object used to send commands to the board avoiding concurrency.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamBase.syncCyclicControlTask">
            <summary>
            Locking object for cyclic task.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamBase.version">
            <summary>
            The <see cref="T:_3Brain.BioCamDriver.BioCamVersion" />.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamBase.tag">
            <summary>
            The tag present on the BioCAM.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamBase.settings">
            <summary>
            The <see cref="T:_3Brain.BioCamDriver.BioCamSettings" /> currently in use.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamBase.dataFormat">
            <summary>
            An instance of the <see cref="T:_3Brain.BioCamDriver.BioCamDataFormat" /> which defines the data protocol info and tools to convert sampled data to analog values and viceversa.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamBase.startStreamingTime">
            <summary>
            The time of streaming begin.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamBase.dataLossAsyncResult">
            <summary>
            Represents the status of the <see cref="M:_3Brain.BioCamDriver.BioCamBase.RaiseDataLossAsync(_3Brain.BioCamDriver.DataLossEventArgs)" /> asynchronous operation.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.BioCamBase.dataRateMeasuredAsyncResult">
            <summary>
            Represents the status of the <see cref="M:_3Brain.BioCamDriver.BioCamBase.RaiseDatarateMeasuredAsync(_3Brain.BioCamDriver.DataRateMeasuredEventArgs)" /> asynchronous operation.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:_3Brain.BioCamDriver.BioCamBase" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.MeaPlateModel">
            <summary>
            Gets the <see cref="T:_3Brain.Common.MeaPlateModel" /> available on the source.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.MeaPlateSerial">
            <summary>
            Gets the serial of the MEA plate available on the source, or 0 in case no serial is available.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.DataStreamTypes">
            <summary>
            Gets an array of available <see cref="T:_3Brain.Common.MeaDataType" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.NBytesPerChSample">
            <summary>
            Gets the number of bytes used to represent a channel sample.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.NBitsPerChSample">
            <summary>
            Gets the number of bits used to represent a channel sample.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.Model">
            <summary>
            Gets the BioCAM model.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.ComPortMaxMsgInLength">
            <summary>
            Gets the maximum length of a message that can be sent to the BioCAM with a single instruction.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.FullDescriptiveText">
            <summary>
            Gets a string with a full description of the BioCAM.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.IsVirtual">
            <summary>
            Gets a value indicating whether the BioCAM is virtual. A virtual BioCAM has no automatic BioCAM connection and no check indicator. A virtual BioCAM has only one-way communication, i.e. commands will be sent to the BioCAM but no reply will be read from it.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.StreamingStartTime">
            <summary>
            Gets the time when streaming begin.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.InterfaceBoard">
            <summary>
            Gets the interface board that can be used to communicate with the BioCAM.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.Version">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.BioCamVersion" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.Serial">
            <summary>
            Gets the serial number of the BioCAM whenever available. In case no serial number is available for the current BioCAM the value will be -1.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.Tag">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.BioCamTagBase" /> to store information on the BioCAM EEPROM.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.StreamingDataType">
            <summary>
            Gets the currently streaming <see cref="T:_3Brain.Common.MeaDataType" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.IsInitialized">
            <summary>
            Gets a value indicating whether the BioCAM is initialized.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.IsDataOnComPortLittleEndian">
            <summary>
            Gets a value indicating the current convention used to send and receive data from the BioCAM through the communication port.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.IsConnected">
            <summary>
            Gets a value indicating whether the BioCAM is connected.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.IsStreaming">
            <summary>
            Gets a value indicating whether the BioCAM is currently acquiring data.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.Settings">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.BioCamSettings" />, which store the BiOCAM settings.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.DataFormat">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.BioCamDataFormat" /> which defines the data protocol info and tools to convert sampled data to analog values and viceversa.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.MeaPlate">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.IMeaPlatePilot" /> plate pilot class.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamBase.Stimulator">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.IBioCamStim" /> module.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamBase.ContainsDataStream(_3Brain.Common.MeaDataType)">
            <summary>
            Returns a value indicating whether the given <see cref="T:_3Brain.Common.MeaDataType" /> exists.
            </summary>
            <param name="type">The <see cref="T:_3Brain.Common.MeaDataType" /> whose presence has to be checked.</param>
            <returns>True is available; false, otherwise.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamBase.GetDataSourceChannels(_3Brain.Common.MeaDataType)">
            <summary>
            Returns the channels for the given <see cref="T:_3Brain.Common.MeaDataType" /> when it exists.
            </summary>
            <param name="type">The <see cref="T:_3Brain.Common.MeaDataType" /> whose channels have to be retrieved.</param>
            <returns>The array of channels.</returns>
            <exception cref="T:System.ArgumentException">Thrown when the given stream is not present.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamBase.SetInterfaceBoard(_3Brain.BioCamDriver.IInterfaceBoard)">
            <summary>
            Set the <see cref="T:_3Brain.BioCamDriver.IInterfaceBoard" /> the BioCAM is attached to.
            </summary>
            <param name="interfaceBoard">The <see cref="T:_3Brain.BioCamDriver.IInterfaceBoard" /> that will be used by the BioCAM.</param>
            <returns>True when the board is set and initialized successfully; false, otherwise.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamBase.Initialize">
            <summary>
            Initialize the BioCAM.
            </summary>
            <returns>Whether the operation was successful.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamBase.Close(System.Boolean)">
            <summary>
            Close the BioCAM and used resources.
            </summary>
            <param name="closeBoard">True for closing also the board.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamBase.StartDataStreaming(System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Start the acquisition.
            </summary>
            <param name="dataPacketTimeSpanMs">The number of milliseconds represented on a single acquired data packet.</param>
            <param name="optimizeDataPacketLatency">A value indicating whether the data stream is optimized for speed (minimum data packet latency) and the consistency of the time interval between successive data packets.</param>
            <returns>Whether the operation was successful.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamBase.StopDataStreaming">
            <summary>
            Stop the acquisition.
            </summary>
            <returns>Whether the operation was successful.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamBase.AssertCanStartStreaming">
            <summary>
            Asserts that the BioCAM can start streaming.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamBase.DoesSupportFunc(_3Brain.BioCamDriver.BioCamFunc)">
            <summary>
            Returns a value indicating whether the BioCAM supports the specified <see cref="T:_3Brain.BioCamDriver.BioCamFunc" />.
            </summary>
            <param name="bioCamFunc">The <see cref="T:_3Brain.BioCamDriver.BioCamFunc" /> to check.</param>
            <returns>True if the function is supported; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamBase.ClockCyclesToMilliseconds(System.UInt64)">
            <summary>
            Converts a time in clock cycles to milliseconds.
            </summary>
            <param name="clockCycles">The time in clock cycles.</param>
            <returns>Returns the time in milliseconds.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamBase.ComPortSend(System.UInt32,System.Byte[],System.Int32,System.Boolean,System.String)">
            <summary>
            Communicate with the BioCAM by sending the given command plus possibly a message.
            </summary>
            <param name="cmd">The BioCAM command.</param>
            <param name="msgIn">The message to be sent with the command. Use null to not send any additional information together with the command.</param>
            <param name="processingWaitingTimeMs">The time left for the BioCAM to process the information and how long to wait after sending the command.</param>
            <param name="requireAck">Whether an acknowledgment of the sent command is required to the BioCAM. If required, this method will return true only in case when the command is acknowledged.</param>
            <param name="logCategory">The category used for logging purposes.</param>
            <returns>Whether data was properly sent and acknowledged by the BioCAM.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamBase.ComPortSendAndReceive(System.UInt32,System.Byte[],System.Int32,System.Byte[]@,System.Int32,System.Boolean,System.String)">
            <summary>
            Communicate with the BioCAM sending the given command plus possibly a message and reading back the requested message out length.
            </summary>
            <param name="cmd">The BioCAM command.</param>
            <param name="msgOut">The reply.</param>
            <param name="msgOutLength">The length of the reply.</param>
            <param name="msgIn">The message to be sent with the command or null to not send any additional information together with the command.</param>
            <param name="processingWaitingTimeMs">The time left to the BioCAM to process the information and hence to wait after sending the command.</param>
            <param name="requireAck">Whether an acknowledgment of the sent command is required to the BioCAM. If required, this method return true only in case the command is acknowledged.</param>
            <param name="logCategory">The category used for logging purposes.</param>
            <returns>Whether data was properly sent and acknowledged by the BioCAM and the reply received.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamBase.ReadBioCamVersion(_3Brain.BioCamDriver.BioCamVersion@,System.Boolean,System.String)">
            <summary>
            Read the BioCAM version and returns a value indicating whether the operation was successful.
            </summary>
            <param name="version">The BioCAM version.</param>
            <param name="resetCom">Whether to reset the communication before trying to read.</param>
            <param name="logCategory">The category used for logging information.</param>
            <returns>True if correctly read.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamBase.ReadBioCamFirmwareVersion(System.Version,_3Brain.BioCamDriver.BioCamVersion@,System.Boolean,System.String)">
            <summary>
            Read the BioCAM firmware version, when the hardware version is already known, and returns a value indicating whether the operation was successful.
            </summary>
            <param name="hwVersion">The known hardware version.</param>
            <param name="version">The final BioCAM version.</param>
            <param name="resetCom">Whether to reset the communication before trying to read.</param>
            <param name="logCategory">The category used for logging information.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamBase.ReadBioCamSerial(_3Brain.BioCamDriver.BioCamSerial@,System.String)">
            <summary>
            Read the BioCAM serial and returns a value indicating whether the operation was successful.
            </summary>
            <param name="serial">The BioCAM serial.</param>
            <param name="logCategory">The category used for logging purposes.</param>
            <returns>True if correctly read.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamBase.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.BioCamBase.DataStreamingStarted">
            <summary>
            Fires when data acquisition starts.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.BioCamBase.DataStreamingStopped">
            <summary>
            Fires when data acquisition ends.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.BioCamBase.DataReceived">
            <summary>
            Fires when a new chunk of data is acquired.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.BioCamBase.DataLossAsync">
            <summary>
            Fires when an acquisition data loss occurs.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.BioCamBase.DataStreamingError">
            <summary>
            Fires when unrecoverable error occurs during acquisition.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.BioCamBase.DataRateMeasuredAsync">
            <summary>
            Fires when a data rate value is measured.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.BioCamBase.BioCamConnectionStatusChanged">
            <summary>
            Event fired when the BioCAM connection status changes by becoming either disconnected or connected.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.BioCamBase.BioCamDestroyed">
            <summary>
            Event fired when the BioCAM is destroyed (no more available) and all the reference to it should be disposed.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.BioCamBase.SendingCommand">
            <summary>
            Event fired when sending a command to the BioCAM that gives an opportunity to customize the message.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.BioCamBase.BioCamMessageSent">
            <summary>
            Event fired when a user informative (info, warning, error, etc.) message is sent.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.BioCamBase.CyclicControlPerformed">
            <summary>
            Fires every time when a the BioCAM cyclic control is performed.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamVersionException">
            <summary>
            Represents an error on checking the BioCAM version that occur during application execution.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.TakeBioCamControlExceptions">
            <summary>
            Represents an error on taking the BioCAM control that occur during application execution.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.DataPacketReceivedEventArgs">
            <summary>
            Provides event data on receiving a data packet containing data and a <see cref="T:_3Brain.BioCamDriver.DataPacketHeader" /> describing the data.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.DataPacketReceivedEventArgs.Header">
            <summary>
            gets the received packet header.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.DataPacketReceivedEventArgs.Payload">
            <summary>
            Gets the received packet payload.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.DataPacketReceivedEventArgs.#ctor(_3Brain.BioCamDriver.DataPacketHeader,System.Byte[])">
            <summary>
            Creates a new instance of the <see cref="T:_3Brain.BioCamDriver.DataPacketReceivedEventArgs" />.
            </summary>
            <param name="header">The received packet header.</param>
            <param name="payload">The received packet payload.</param>
        </member>
        <member name="T:_3Brain.BioCamDriver.DataReceivedEventArgs">
            <summary>
            Provides event data on receiving a generic array of data.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.DataReceivedEventArgs.Data">
            <summary>
            Gets the received data.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.DataReceivedEventArgs.#ctor(System.Byte[])">
            <summary>
            Creates a new instance of the <see cref="T:_3Brain.BioCamDriver.DataReceivedEventArgs" />.
            </summary>
            <param name="data">The received data.</param>
        </member>
        <member name="T:_3Brain.BioCamDriver.DataRateMeasuredEventArgs">
            <summary>
            Provides event data when data rate is measured.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.DataRateMeasuredEventArgs.DataRateMBs">
            <summary>
            Gets the data rate in MB/s.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.DataRateMeasuredEventArgs.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:_3Brain.BioCamDriver.DataRateMeasuredEventArgs" />.
            </summary>
            <param name="dataRateMBs">The data rate in MB/s.</param>
        </member>
        <member name="T:_3Brain.BioCamDriver.DataLossEventArgs">
            <summary>
            Arguments for events raising in case of data loss.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.DataLossEventArgs.Counter">
            <summary>
            The number of data losses since the start of the acquisition.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.DataLossEventArgs.NReceivedFrames">
            <summary>
            The number of received frames since the beginning of the data streaming.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.DataLossEventArgs.#ctor(System.Int32,System.Int64)">
            <summary>
            Instantiate a new instance of <see cref="T:_3Brain.BioCamDriver.DataLossEventArgs" />.
            </summary>
            <param name="counter">The number of data losses since the start of the acquisition.</param>
            <param name="nReceivedFrames">The last received frame since the beginning of the acquisition.</param>
        </member>
        <member name="T:_3Brain.BioCamDriver.InterfaceBoardModel">
            <summary>
            Enumerates all the supported interface board models
            [leave Unknown as the last and start index from 0]
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.InterfaceBoardModel.Unknown">
            <summary>
            An unknown interface board model
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.InterfaceBoardModel.GrabLink">
            <summary>
            Grablink from Euresys.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.InterfaceBoardModel.FTDIUSB3">
            <summary>
            USB3 5gbps interface.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.UsbDeviceEventArgs">
            <summary>
            Event arguments data for a USB device insertion or removal event.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.UsbDeviceEventArgs.InterfaceBoard">
            <summary>
            The FTDI device interface board.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.UsbDeviceRequiringDriverInstallationEventArgs">
            <summary>
            Event arguments data for an USB device driver installation request event.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.UsbDeviceRequiringDriverInstallationEventArgs.Device">
            <summary>
            Gets the requesting <see cref="T:_3Brain.Deployment.Drivers._3BrainUsbDevice" />.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.UsbDeviceRequiringDriverInstallationEventArgs.#ctor(_3Brain.Deployment.Drivers._3BrainUsbDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:_3Brain.BioCamDriver.UsbDeviceRequiringDriverInstallationEventArgs" /> class.
            </summary>
            <param name="device">The requesting <see cref="T:_3Brain.Deployment.Drivers._3BrainUsbDevice" /></param>
        </member>
        <member name="M:_3Brain.BioCamDriver.UsbDeviceRequiringDriverInstallationEventArgs.SignalOperationHandled">
            <summary>
            Sets the state of the operation to signaled, allowing one or more waiting threads to proceed.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.UsbDeviceRequiringDriverInstallationEventArgs.WaitForOperationToBeHandled(System.Int32)">
            <summary>
            Blocks the current thread until the operation receives a signal.
            </summary>
            <param name="timeoutMilliseconds">The number of milliseconds to wait, or System.Threading.Timeout.Infinite (-1) to wait indefinitely.</param>
            <returns>True if the current instance receives a signal; otherwise, false.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.MeaPlateSettings">
            <summary>
            Represents the MEA plate settings.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.MeaPlateSettings.calibrationInterval">
            <summary>
            The calibration interval used for the plate. This settings affects the frame rate.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.MeaPlateSettings.calibrationIntervalMs">
            <summary>
            The calibration interval in milliseconds used for the plate. This settings affects the frame rate and thus is placed here instead than in general settings.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.MeaPlateSettings.#ctor(_3Brain.BioCamDriver.IMeaPlatePilot)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.MeaPlateSettings" />.
            </summary>
            <param name="owner">The settings <see cref="T:_3Brain.BioCamDriver.IMeaPlatePilot" /> owner.</param>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateSettings.Item(System.Int32)">
            <summary>
            Gets the plate chip <see cref="T:_3Brain.BioCamDriver.MeaChipSettings" /> for the specified well index.
            </summary>
            <param name="wellIdx">The chip well index.</param>
            <returns>A <see cref="T:_3Brain.BioCamDriver.MeaChipSettings" />.</returns>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateSettings.Constants">
            <summary>
            Gets settings constants.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateSettings.CalibrationInterval">
            <summary>
            Gets or sets the calibration interval used for the plate.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateSettings.CalibrationIntervalMs">
            <summary>
            Gets or sets the calibration interval in milliseconds (ms) used for the plate.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateSettings.TestMode">
            <summary>
            Gets or sets a boolean indicating whether to plate is in test mode or not.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateSettings.IsChamberTemperatureControlOn">
            <summary>
            Gets or sets a boolean indicating whether chamber temperature is turn on or off.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateSettings.SetChamberTemperatureCelsius">
            <summary>
            Gets or sets the chamber temperature in Celsius requested (sent to the BioCAM).
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateSettings.ReadChamberTemperatureCelsius">
            <summary>
            Gets the actual chamber temperature in Celsius.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateSettings.IsPlateTemperatureVoltageReadoutOn">
            <summary>
            Gets or sets a boolean indicating whether plate temperature readout in Voltage is on or off.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateSettings.ReadPlateTemperatureVoltage">
            <summary>
            Gets the plate temperature (for all well chips) in Voltage.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateSettings.ReadPlateTemperatureCelsius">
            <summary>
            Gets the plate temperature (for all well chips) in Celsius.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateSettings.IsCo2ControlOn">
            <summary>
            Gets or sets a boolean indicating whether CO2 pump is turn on or off.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateSettings.SetCo2Perc">
            <summary>
            Gets or sets the CO2 value in percentage requested (sent to the BioCAM).
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateSettings.ReadCo2Perc">
            <summary>
            Gets the actual CO2 value in percentage.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateSettings.ReadRelativeHumidityPerc">
            <summary>
            Gets the actual relative humidity value in percentage.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateSettings.DoorStatus">
            <summary>
            Gets or sets a <see cref="T:_3Brain.BioCamDriver.MeaPlateDoorStatus" /> indicating the boor status.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateSettings.LockStatus">
            <summary>
            Gets or sets a <see cref="T:_3Brain.BioCamDriver.MeaPlateLockStatus" /> indicating the lock status.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateSettings.AmplifiersBiasMilliVolt">
            <summary>
            Gets or sets all wells chips amplifiers bias in millivolt (mV).
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.MeaPlateSettings.CalibrationBlankingValue">
            <summary>
             Gets or sets all wells chip calibration blanking value.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.MeaPlateSettings.LoadDefault">
            <summary>
            Loads the default settings values.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.MeaPlateSettingsConstants">
            <summary>
            Represents settings constants base class.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.ValidatingChipPropertyChangingEventArgs">
            <summary>
            Provides data for a chip property changing cancelable event.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.ValidatingChipPropertyChangingEventArgs.WellIdx">
            <summary>
            Gets chip well index.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamDupleXStim">
            <summary>
            Represents a BioCAM DupleX stimulator.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamDupleXStim.#ctor(_3Brain.BioCamDriver.BioCamDupleX)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.BioCamDupleXStim" />.
            </summary>
            <param name="bioCam">The <see cref="T:_3Brain.BioCamDriver.BioCamDupleX" /> owner of this instance.</param>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamDupleXStim.MaxPulseCount">
            <summary>
            Gets the maximum number of stimulus pulses that can be loaded inside the stimulator's internal memory.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.ProtocolStatusChangedEventArgs">
            <summary>
            Provides event data for <see cref="E:_3Brain.BioCamDriver.IBioCamStimProtocolManager.ProtocolStatusChanged" /> event.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.ProtocolStatusChangedEventArgs.Index">
            <summary>
            Gets protocol index.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.ProtocolStatusChangedEventArgs.Status">
            <summary>
            Gets protocol stimulation status.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.LoadingProtocolProgressChangedEventArgs">
            <summary>
            Provides event data for <see cref="E:_3Brain.BioCamDriver.IBioCamStimProtocolManager.LoadingProtocolProgressChanged" /> event.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.LoadingProtocolProgressChangedEventArgs.Index">
            <summary>
            Gets protocol index.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.PlayingProtocolProgressChangedEventArgs">
            <summary>
            Provides event data for <see cref="E:_3Brain.BioCamDriver.IBioCamStimProtocolManager.PlayingProtocolProgressChanged" /> event.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.PlayingProtocolProgressChangedEventArgs.Index">
            <summary>
            Gets protocol index.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamStimSettings">
            <summary>
            Represents a BioCAM stimulation settings.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimSettings.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.BioCamStimSettings" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamStimSettings.Constants">
            <summary>
            Gets settings constants.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamStimSettings.IsStimCalibrationOn">
            <summary>
            Gets or sets a boolean indicating if the stimulation calibration is on or off.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamStimSettings.CalibrationDistanceMicroSec">
            <summary>
            Gets or sets the stimulation calibration distance in microseconds (μs).
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimSettings.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimSettings.CopyTo(_3Brain.Common.BaseSettings)">
            <summary>
            Copies all fields of the current object to the destination one.
            </summary>
            <param name="destObject">The destination object.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimSettings.LoadDefault">
            <summary>
            Loads the default settings values.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamStimSettingsConstants">
            <summary>
            Represents settings constants base class.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.HyperCamAlphaStim">
            <summary>
             Represents a HyperCAM Alpha stimulator.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.HyperCamAlphaStim.#ctor(_3Brain.BioCamDriver.HyperCamAlpha)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.HyperCamAlphaStim" />.
            </summary>
            <param name="bioCam">The <see cref="T:_3Brain.BioCamDriver.HyperCamAlpha" /> owner of this instance.</param>
        </member>
        <member name="P:_3Brain.BioCamDriver.HyperCamAlphaStim.MaxPulseCount">
            <summary>
            Gets the maximum number of stimulus pulses that can be loaded inside the stimulator's internal memory.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.HyperCamAlphaStimProtocolManager">
            <summary>
            Represents HyperCAM Alpha stimulator protocol manager.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.HyperCamAlphaStimProtocolManager.MaxProtocols">
            <summary>
            Gets the maximum number of protocols that can be loaded inside the stimulator.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.HyperCamDeltaStim">
            <summary>
             Represents a HyperCAM Delta stimulator.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.HyperCamDeltaStim.#ctor(_3Brain.BioCamDriver.HyperCamDelta)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.HyperCamDeltaStim" />.
            </summary>
            <param name="bioCam">The <see cref="T:_3Brain.BioCamDriver.HyperCamDelta" /> owner of this instance.</param>
        </member>
        <member name="P:_3Brain.BioCamDriver.HyperCamDeltaStim.MaxPulseCount">
            <summary>
            Gets the maximum number of stimulus pulses that can be loaded inside the stimulator's internal memory.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.IBioCamStimProtocolManager">
            <summary>
            Defines a BioCAM stimulator protocol manager.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCamStimProtocolManager.MaxProtocols">
            <summary>
            Gets the maximum number of protocols that can be loaded inside the stimulator.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCamStimProtocolManager.AreProtocolsInitialized">
            <summary>
            Gets whether the stimulation protocols are initialized or not.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCamStimProtocolManager.InitializeProtocols(System.Int32)">
            <summary>
            Initializes the protocols that will be used in the stimulator.
            </summary>
            <param name="nProtocols">The number of protocols.</param>
            <returns>Whether the operation was successful.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCamStimProtocolManager.LoadProtocol(System.Int32,_3Brain.BioCamDriver.IStimProtocol)">
            <summary>
            Loads the protocol into the stimulator.
            </summary>
            <param name="index">The protocol index.</param>
            <param name="protocol">The protocol.</param>
            <returns>Whether the operation was successful.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCamStimProtocolManager.StartProtocol(System.Int32)">
            <summary>
            Starts the loaded protocol.
            </summary>
            <param name="index">The protocol index.</param>
            <returns>Whether the operation was successful.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCamStimProtocolManager.StopProtocol(System.Int32)">
            <summary>
            Stops the playing protocol.
            </summary>
            <param name="index">The protocol index.</param>
            <returns>Whether the operation was successful.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCamStimProtocolManager.ResetProtocol(System.Int32)">
            <summary>
            Resets the loaded protocol.
            </summary>
            <param name="index">The protocol index.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCamStimProtocolManager.GetProtocolStatus(System.Int32)">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.StimStatus" /> for a given protocol.
            </summary>
            <param name="index">The protocol index.</param>
            <returns>The protocol status.</returns>
        </member>
        <member name="E:_3Brain.BioCamDriver.IBioCamStimProtocolManager.ProtocolStatusChanged">
            <summary>
            Fires when the protocol status changes.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.IBioCamStimProtocolManager.LoadingProtocolProgressChanged">
            <summary>
            Fires when the loading progress of the protocol changes.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.IBioCamStimProtocolManager.PlayingProtocolProgressChanged">
            <summary>
            Fires when the playing progress of the protocol changes.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamStimProtocolManagerBase">
            <summary>
            Represents an abstract BioCAM stimulator protocol manager.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamStimProtocolManagerBase.AreProtocolsInitialized">
            <summary>
            Gets whether the stimulation protocols are initialized or not.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.BioCamStimProtocolManagerBase.MaxProtocols">
            <summary>
            Gets the maximum number of protocols that can be loaded inside the stimulator.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimProtocolManagerBase.InitializeProtocols(System.Int32)">
            <summary>
            Initializes the protocols that will be used in the stimulator.
            </summary>
            <param name="nProtocols">The number of protocols.</param>
            <returns>Whether the operation was successful.</returns>
            <exception cref="T:System.InvalidOperationException">Throws when the stimulator is not properly initialized.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimProtocolManagerBase.LoadProtocol(System.Int32,_3Brain.BioCamDriver.IStimProtocol)">
            <summary>
            Loads the protocol into the stimulator.
            </summary>
            <param name="index">The protocol index.</param>
            <param name="protocol">The protocol.</param>
            <returns>Whether the operation was successful.</returns>
            <exception cref="T:System.InvalidOperationException">Throws when the stimulator is not properly initialized.</exception>
            <exception cref="T:System.ArgumentException">Throws when <paramref name="protocol" /> is invalid.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimProtocolManagerBase.StartProtocol(System.Int32)">
            <summary>
            Starts the loaded protocol.
            </summary>
            <param name="index">The protocol index.</param>
            <returns>Whether the operation was successful.</returns>
            <exception cref="T:System.InvalidOperationException">Throws when the stimulator is not properly initialized.</exception>
            <exception cref="T:System.ArgumentException">Throws when the <paramref name="index" /> is invalid.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimProtocolManagerBase.StopProtocol(System.Int32)">
            <summary>
            Stops the playing protocol.
            </summary>
            <param name="index">The protocol index.</param>
            <returns>Whether the operation was successful.</returns>
            <exception cref="T:System.InvalidOperationException">Throws when the stimulator is not properly initialized.</exception>
            <exception cref="T:System.ArgumentException">Throws when the <paramref name="index" /> is invalid.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimProtocolManagerBase.ResetProtocol(System.Int32)">
            <summary>
            Resets the loaded protocol.
            </summary>
            <param name="index">The protocol index.</param>
            <exception cref="T:System.InvalidOperationException">Throws when the stimulator is not properly initialized.</exception>
            <exception cref="T:System.ArgumentException">Throws when the <paramref name="index" /> is invalid.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamStimProtocolManagerBase.GetProtocolStatus(System.Int32)">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.StimStatus" /> for a given protocol.
            </summary>
            <param name="index">The protocol index.</param>
            <returns>The protocol status.</returns>
            <exception cref="T:System.InvalidOperationException">Throws when the stimulator is not properly initialized.</exception>
            <exception cref="T:System.ArgumentException">Throws when the <paramref name="index" /> is invalid.</exception>
        </member>
        <member name="E:_3Brain.BioCamDriver.BioCamStimProtocolManagerBase.ProtocolStatusChanged">
            <summary>
            Fires when the protocol status changes.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.BioCamStimProtocolManagerBase.LoadingProtocolProgressChanged">
            <summary>
            Fires when the loading progress of the protocol changes.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.BioCamStimProtocolManagerBase.PlayingProtocolProgressChanged">
            <summary>
            Fires when the playing progress of the protocol changes.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.IStimProtocol">
            <summary>
            Defines a stimulation protocol.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IStimProtocol.Name">
            <summary>
            Gets the protocol name.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IStimProtocol.IsDynamic">
            <summary>
            Gets whether the protocol is dynamic, this means that each time stamp is associated to a pulse configuration.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IStimProtocol.WellsIndexes">
            <summary>
            Gets the well indexes associated to the protocol.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IStimProtocol.NegativeEndPoints">
            <summary>
            Gets the protocol negative end points.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IStimProtocol.PositiveEndPoints">
            <summary>
             Gets the protocol positive end points.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IStimProtocol.Pulses">
            <summary>
            Gets array of <see cref="T:_3Brain.Common.RectangularStimPulse" /> used by the protocol. If is a single pulse, it will be used for all timestamps.
            If is more then one (dynamic protocol), each pulse have to be associate to a time stamp (Pulses.Length == TimestampsMicrosec.Length).
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IStimProtocol.TimestampsMicroSec">
            <summary>
            Gets or timestamps of the protocol in microseconds. The values are relative to the start of the stimulation.
            (The value maybe approximated to the nearest value according to the resolution of the stimulator.)
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamStimExternalEndPoint">
            <summary>
            Enumerates the external endpoints for single-well BioCAMs (X and DupleX)
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamSingleWellExternalEndPointExtensions">
            <summary>
            Represents <see cref="T:_3Brain.BioCamDriver.BioCamStimExternalEndPoint" /> static extension methods.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSingleWellExternalEndPointExtensions.GetName(_3Brain.BioCamDriver.BioCamStimExternalEndPoint)">
            <summary>
            Returns the external endpoint name.
            </summary>
            <param name="ep">The external endpoint.</param>
            <returns>The external endpoint name.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSingleWellExternalEndPointExtensions.GetLocation(_3Brain.BioCamDriver.BioCamStimExternalEndPoint)">
            <summary>
            Returns the external endpoint location.
            </summary>
            <param name="ep">The external endpoint.</param>
            <returns>The external endpoint location.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.BioCamSingleWellExternalEndPointExtensions.GetDescription(_3Brain.BioCamDriver.BioCamStimExternalEndPoint)">
            <summary>
            Returns the external endpoint description.
            </summary>
            <param name="ep">The external endpoint.</param>
            <returns>The external endpoint description.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.StimEndPointAlpha">
            <summary>
            Represents a stimulation endpoint compatible for HyperCAM Alpha.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimEndPointAlpha.#ctor(_3Brain.Common.ChCoord,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.StimEndPointAlpha" />.
            </summary>
            <param name="ep">The <see cref="T:_3Brain.Common.ChCoord" /> associated to the endpoint.</param>
            <param name="name">The string identifying the endpoint.</param>
            <param name="location">The string giving information on where the endpoint is located.</param>
            <param name="description">The descriptive text of the endpoint.</param>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimEndPointAlpha.IsInternal">
            <summary>
            Gets a value indicating whether the endpoint is internal to the MEA plate.
            In case of a reference electrode, this value returns false.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimEndPointAlpha.IsExternal">
            <summary>
            Gets a value indicating whether the endpoint is external to the MEA plate.
            In case of a reference electrode, this value returns false.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimEndPointAlpha.IsReference">
            <summary>
            Gets a value indicating whether the endpoint is the reference electrode of the MEA.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimEndPointAlpha.ToChCoord">
            <summary>
            Gets the coordinates of the end point when this is an internal endpoint or null in case it is a reference endpoint or an external endpoint.
            </summary>
            <returns>The coordinates.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.StimTrainProtocol">
            <summary>
            Represents a stimulation train protocol.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimTrainProtocol.#ctor(System.String,_3Brain.Common.RectangularStimPulse,_3Brain.Common.StimProperties,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" />.
            </summary>
            <param name="name">The protocol name.</param>
            <param name="mainPulse">The main <see cref="T:_3Brain.Common.RectangularStimPulse" />.</param>
            <param name="constraints">The protocol constraints.</param>
            <param name="count">The number of protocol pulses.</param>
            <param name="distance">The protocol distance in microseconds (μs).</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimTrainProtocol.#ctor(System.String,_3Brain.Common.RectangularStimPulse,_3Brain.Common.StimProperties,System.Int32,System.Double)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" />.
            </summary>
            <param name="name">The protocol name.</param>
            <param name="mainPulse">The main <see cref="T:_3Brain.Common.RectangularStimPulse" />.</param>
            <param name="constraints">The protocol constraints.</param>
            <param name="count">The number of protocol pulses.</param>
            <param name="pulseRateHz">The protocol pulse rate in hertz (Hz).</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimTrainProtocol.#ctor(System.String,_3Brain.Common.RectangularStimPulse,_3Brain.Common.StimProperties,_3Brain.Common.DataSamplingTimeConverter,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" />.
            </summary>
            <param name="name">The protocol name.</param>
            <param name="mainPulse">The main <see cref="T:_3Brain.Common.RectangularStimPulse" />.</param>
            <param name="constraints">The protocol constraints.</param>
            <param name="converter"></param>
            <param name="delay">The protocol delay in MicroSec.</param>
            <param name="count">The number of protocol pulses.</param>
            <param name="distance">The protocol distance in microseconds (μs).</param>
            <exception cref="T:System.ArgumentNullException">Throws when <paramref name="mainPulse" />,<paramref name="constraints" /> or <paramref name="converter" /> is null.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimTrainProtocol.#ctor(System.String,_3Brain.Common.StimulusBaseTrainConfigurationOptions,_3Brain.Common.DataSamplingTimeConverter)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" />.
            </summary>
            <param name="name">The protocol name.</param>
            <param name="options">The protocol <see cref="T:_3Brain.Common.StimulusBaseTrainConfigurationOptions" />.</param>
            <param name="converter">The protocol <see cref="T:_3Brain.Common.DataSamplingTimeConverter" />.</param>
            <exception cref="T:System.ArgumentNullException">Throws when <paramref name="converter" /> or <paramref name="options" /> is null.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimTrainProtocol.NewByPulseRate(System.String,_3Brain.Common.RectangularStimPulse,_3Brain.Common.StimProperties,System.Int32,System.Double)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" /> by pulse rate.
            </summary>
            <param name="name">The protocol name.</param>
            <param name="mainPulse">The main <see cref="T:_3Brain.Common.RectangularStimPulse" />.</param>
            <param name="constraints">The protocol constraints.</param>
            <param name="count">The number of protocol pulses.</param>
            <param name="pulseRateHz">The protocol pulse rate in hertz (Hz).</param>
            <returns></returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimTrainProtocol.NewByPulsePeriod(System.String,_3Brain.Common.RectangularStimPulse,_3Brain.Common.StimProperties,System.Int32,System.Double)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" /> by pulse period.
            </summary>
            <param name="name">The protocol name.</param>
            <param name="mainPulse">The main <see cref="T:_3Brain.Common.RectangularStimPulse" />.</param>
            <param name="constraints">The protocol constraints.</param>
            <param name="count">The number of protocol pulses.</param>
            <param name="pulsePeriodMs">The protocol pulse period in milliseconds (ms).</param>
            <returns></returns>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimTrainProtocol.IsActive">
            <summary>
            Gets whether the protocol is active.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimTrainProtocol.StimulationTrainType">
            <summary>
            Gets protocol <see cref="T:_3Brain.Common.StimTrainType" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimTrainProtocol.TrainConfigurationOptions">
            <summary>
            Gets protocol <see cref="T:_3Brain.Common.StimulusBaseTrainConfigurationOptions" />. 
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimTrainProtocol.Duration">
            <summary>
            Gets protocol duration in <see cref="T:System.TimeSpan" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimTrainProtocol.Constraints">
            <summary>
            Gets protocol constraints.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimTrainProtocol.GetDynamicPulseProtocol(System.Double,System.Double)">
            <summary>
            Returns a dynamic <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" /> created from a range of amplitudes pulses.
            </summary>
            <param name="fromAmplitude">Starting amplitude range in uA.</param>
            <param name="toAmplitude">Final amplitude range in uA.</param>
            <returns>A dynamic <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" />.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimTrainProtocol.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimTrainProtocol.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
            <returns>True if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimTrainProtocol.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimTrainProtocol.Equals(_3Brain.BioCamDriver.StimTrainProtocol)">
            <summary>
            Determines whether the specified <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" /> is equal to the current <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" />.
            </summary>
            <param name="other">The <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" /> to compare with the current <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" />.</param>
            <returns>True if the specified <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" /> is equal to the current <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimTrainProtocol.op_Equality(_3Brain.BioCamDriver.StimTrainProtocol,_3Brain.BioCamDriver.StimTrainProtocol)">
            <summary>
            Determines whether the first <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" /> is equal to the second <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" />.
            </summary>
            <param name="x">The first <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" /> to compare.</param>
            <param name="y">The second <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" /> to compare.</param>
            <returns>True if the first <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" /> is equal to the second <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimTrainProtocol.op_Inequality(_3Brain.BioCamDriver.StimTrainProtocol,_3Brain.BioCamDriver.StimTrainProtocol)">
            <summary>
            Determines whether the first <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" /> is not equal to the second <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" />.
            </summary>
            <param name="x">The first <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" /> to compare.</param>
            <param name="y">The second <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" /> to compare.</param>
            <returns>True if the first <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" /> is not equal to the second <see cref="T:_3Brain.BioCamDriver.StimTrainProtocol" />; otherwise, false.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.StimEndPointDupleX">
            <summary>
            Represents a stimulation endpoint compatible for BioCAM DupleX.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimEndPointDupleX.#ctor(_3Brain.Common.ChCoord,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.StimEndPointDupleX" />.
            </summary>
            <param name="ep">The <see cref="T:_3Brain.Common.ChCoord" /> associated to the endpoint.</param>
            <param name="name">The string identifying the endpoint.</param>
            <param name="location">The string giving information on where the endpoint is located.</param>
            <param name="description">The descriptive text of the endpoint.</param>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimEndPointDupleX.IsInternal">
            <summary>
            Gets a value indicating whether the endpoint is internal to the MEA plate.
            In case of a reference electrode, this value returns false.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimEndPointDupleX.IsExternal">
            <summary>
            Gets a value indicating whether the endpoint is external to the MEA plate.
            In case of a reference electrode, this value returns false.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimEndPointDupleX.ToChCoord">
            <summary>
            Gets the coordinates of the end point when this is an internal endpoint or null in case it is a reference endpoint or an external endpoint.
            </summary>
            <returns>The coordinates.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimEndPointDupleX.ToExternalEndPoint">
            <summary>
            Gets the corresponding <see cref="T:_3Brain.BioCamDriver.BioCamStimExternalEndPoint" /> of the end point when this is an external endpoint or null in case it is a reference endpoint or an internal endpoint.
            </summary>
            <returns>The coordinates.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.StimProtocol">
            <summary>
            Represents a stimulation protocol.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimProtocol.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.StimProtocol" />.
            </summary>
            <param name="name">The protocol name.</param>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimProtocol.Name">
            <summary>
            Gets the protocol name.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimProtocol.WellsIndexes">
            <summary>
            Gets the well indexes associated to the protocol.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimProtocol.PositiveEndPoints">
            <summary>
             Gets the protocol positive end points.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimProtocol.NegativeEndPoints">
            <summary>
            Gets the protocol negative end points.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimProtocol.Pulses">
            <summary>
            Gets array of <see cref="T:_3Brain.Common.RectangularStimPulse" /> used by the protocol. If is a single pulse, it will be used for all timestamps.
            If is more then one (dynamic protocol), each pulse have to be associate to a time stamp (Pulses.Length == TimestampsMicrosec.Length).
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimProtocol.MainPulse">
            <summary>
            Get the main (first) pulse form <see cref="P:_3Brain.BioCamDriver.StimProtocol.Pulses" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimProtocol.TimestampsMicroSec">
            <summary>
            Gets or timestamps of the protocol in microseconds. The values are relative to the start of the stimulation.
            (The value maybe approximated to the nearest value according to the resolution of the stimulator.)
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimProtocol.IsDynamic">
            <summary>
            Gets whether the protocol is dynamic, this means that each time stamp is associated to a pulse configuration.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimProtocol.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.StimProtocolType">
            <summary>
            Enumerates all stimulation protocols types.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.StimProtocolType.Static">
            <summary>
            Static Protocol. All stimulation arguments like the pulse shape, end points and timestamps, must be first loaded before the stimulation starts.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.StimProtocolType.RealTime">
            <summary>
            Real Time Protocol. Any stimulation arguments like the pulse shape, end points and timestamps, can be send or updated in real time after the stimulation has started.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.StimStatus">
            <summary>
            Enumerates all stimulation statuses.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.StimStatus.Unknown">
            <summary>
            Unknown state.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.StimStatus.Idle">
            <summary>
            Initialized and waiting for commands.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.StimStatus.Loading">
            <summary>
            Protocol loading.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.StimStatus.Ready">
            <summary>
            Protocol loaded, ready to play.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.StimStatus.Playing">
            <summary>
            Playing, i.e. delivering stimuli.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.StimStatus.Finished">
            <summary>
            Protocol finished, ready to play again.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.StimStatus.FinishedError">
            <summary>
            An error occurred while delivering stimuli.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.IInterfaceBoard">
            <summary>
            Defines a communication interface board.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IInterfaceBoard.Model">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.InterfaceBoardModel" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IInterfaceBoard.IsNeedingActivePolling">
            <summary>
            Gets a value indicating whether the board required active polling in order to detect new inserted BioCAMs.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IInterfaceBoard.SerialNumber">
            <summary>
            Gets the serial number of the board.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IInterfaceBoard.IsOpen">
            <summary>
            Gets a value indicating whether the interface board is open.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IInterfaceBoard.IsComPortInitialized">
            <summary>
            Gets a value indicating whether the communication port is initialized.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IInterfaceBoard.DataProtocol">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.BioCamDataFormat" /> used to transfer the data.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.IInterfaceBoard.Open">
            <summary>
            Open the acquisition board.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.IInterfaceBoard.TryOpen">
            <summary>
            Try to open the interface board.
            </summary>
            <returns>Whether the board was successfully open.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IInterfaceBoard.Close">
            <summary>
            Close the interface board.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.IInterfaceBoard.InitComPort">
            <summary>
            Initialize the communication port.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.IInterfaceBoard.ComPortWrite(System.Byte[],System.String)">
            <summary>
            Write the specified data to the communication port.
            </summary>
            <param name="data">The data to write.</param>
            <param name="logCategory">The category to use for logging purposes.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.IInterfaceBoard.ComPortRead(System.Int32,System.Byte[]@,System.String)">
            <summary>
            Read the specified amount of data from the communication port. The returned data can be also shorter than specified length if not enough data is available on the communication port.
            </summary>
            <param name="logCategory">The category to use for logging purposes.</param>
            <param name="length">The length of data to read.</param>
            <param name="data">The read data.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.IInterfaceBoard.ComPortFlush">
            <summary>
            Flush data eventually present on the communication port.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.IInterfaceBoard.CloseComPort">
            <summary>
            Close the communication port.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.IInterfaceBoard.StartStreaming(_3Brain.BioCamDriver.BioCamDataFormat)">
            <summary>
            Start the streaming of data packets.
            </summary>
            <param name="dataProtocol">The protocol used to transfer the data.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.IInterfaceBoard.StopStreaming">
            <summary>
            Stop the streaming of data packets.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.IInterfaceBoard.DataReceived">
            <summary>
            Fires when a new packet of data is received.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.IInterfaceBoard.DataLoss">
            <summary>
            Fires when a data stream loss occurs.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.IInterfaceBoard.DataStreamingError">
            <summary>
            Fires when a data stream unrecoverable error occurs and streaming must be reinitialized.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.IInterfaceBoard.DataRateMeasured">
            <summary>
            Fires when a data rate value is measured.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.IBioCam">
            <summary>
            Defines a BioCAM as a <see cref="T:_3Brain.Common.IMeaDataSourceProvider" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCam.Model">
            <summary>
            Gets the BioCAM model.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCam.FullDescriptiveText">
            <summary>
            Gets the full descriptive test for the BioCAM.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCam.IsVirtual">
            <summary>
            Gets a value indicating whether the BioCAM is virtual. A virtual BioCAM has no automatic BioCAM connection and no check indicator. A virtual BioCAM has only one-way communication, i.e. commands will be sent to the BioCAM but no reply will be read from it.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCam.StreamingStartTime">
            <summary>
            Gets the time when streaming begin.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCam.InterfaceBoard">
            <summary>
            Gets the interface board that can be used to communicate with the BioCAM.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCam.ComPortMaxMsgInLength">
            <summary>
            Gets the maximum length of a message that can be sent to the BioCAM with a single instruction.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCam.IsDataOnComPortLittleEndian">
            <summary>
            Gets a value indicating the current convention used to send and receive data from the BioCAM through the communication port.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCam.Version">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.BioCamVersion" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCam.Serial">
            <summary>
            Gets the serial number of the BioCAM whenever available. In case no serial number is available for the current BioCAM the value will be -1.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCam.Settings">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.BioCamSettings" />, which store the BioCAM settings.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCam.Tag">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.BioCamTagBase" /> to store information on the BioCAM EEPROM.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCam.DataFormat">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.BioCamDataFormat" /> which defines the data protocol info and tools to convert sampled data to analog values and viceversa.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCam.StreamingDataType">
            <summary>
            Gets the currently streaming <see cref="T:_3Brain.Common.MeaDataType" />.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCam.IsInitialized">
            <summary>
            Gets a value indicating whether the BioCAM is initialized.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCam.IsConnected">
            <summary>
            Gets a value indicating whether the BioCAM is connected.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCam.IsStreaming">
            <summary>
            Gets a value indicating whether the BioCAM is currently streaming data.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCam.MeaPlate">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.IMeaPlatePilot" /> plate pilot class.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCam.Stimulator">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.IBioCamStim" /> module.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCam.ComPortSend(System.UInt32,System.Byte[],System.Int32,System.Boolean,System.String)">
            <summary>
            Communicate with the BioCAM by sending the given command plus possibly a message.
            </summary>
            <param name="cmd">The BioCAM command.</param>
            <param name="msgIn">The message to be sent with the command. Use null to not send any additional information together with the command.</param>
            <param name="processingWaitingTimeMs">The time left for the BioCAM to process the information and how long to wait after sending the command.</param>
            <param name="requireAck">Whether an acknowledgment of the sent command is required to the BioCAM. If required, this method will return true only in case when the command is acknowledged.</param>
            <param name="logCategory">The category used for logging purposes.</param>
            <returns>Whether data was properly sent and acknowledged by the BioCAM.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCam.ComPortSendAndReceive(System.UInt32,System.Byte[],System.Int32,System.Byte[]@,System.Int32,System.Boolean,System.String)">
            <summary>
            Communicate with the BioCAM sending the given command plus possibly a message and reading back the requested message out length.
            </summary>
            <param name="cmd">The BioCAM command.</param>
            <param name="msgOut">The reply.</param>
            <param name="msgOutLength">The length of the reply.</param>
            <param name="msgIn">The message to be sent with the command or null to not send any additional information together with the command.</param>
            <param name="processingWaitingTimeMs">The time left to the BioCAM to process the information and hence to wait after sending the command.</param>
            <param name="requireAck">Whether an acknowledgment of the sent command is required to the BioCAM. If required, this method return true only in case the command is acknowledged.</param>
            <param name="logCategory">The category used for logging purposes.</param>
            <returns>Whether data was properly sent and acknowledged by the BioCAM and the reply received.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCam.ReadBioCamVersion(_3Brain.BioCamDriver.BioCamVersion@,System.Boolean,System.String)">
            <summary>
            Read the BioCAM version and returns a value indicating whether the operation was successful.
            </summary>
            <param name="version">The BioCAM version.</param>
            <param name="resetCom">Whether to reset the communication before trying to read.</param>
            <param name="logCategory">The category used for logging purposes.</param>
            <returns>True if correctly read.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCam.ReadBioCamSerial(_3Brain.BioCamDriver.BioCamSerial@,System.String)">
            <summary>
            Read the BioCAM serial and returns a value indicating whether the operation was successful.
            </summary>
            <param name="serial">The BioCAM serial.</param>
            <param name="logCategory">The category used for logging purposes.</param>
            <returns>True if correctly read.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCam.DoesSupportFunc(_3Brain.BioCamDriver.BioCamFunc)">
            <summary>
            Returns a value indicating whether the BioCAM supports the specified <see cref="T:_3Brain.BioCamDriver.BioCamFunc" />.
            </summary>
            <param name="bioCamFunc">The <see cref="T:_3Brain.BioCamDriver.BioCamFunc" /> to check.</param>
            <returns>True if the function is supported; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCam.ClockCyclesToMilliseconds(System.UInt64)">
            <summary>
            Converts a time in clock cycles to milliseconds.
            </summary>
            <param name="clockCycles">The time in clock cycles.</param>
            <returns>Returns the time in milliseconds.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCam.SetInterfaceBoard(_3Brain.BioCamDriver.IInterfaceBoard)">
            <summary>
            Set the <see cref="T:_3Brain.BioCamDriver.IInterfaceBoard" /> the BioCAM is attached to.
            </summary>
            <param name="interfaceBoard">The <see cref="T:_3Brain.BioCamDriver.IInterfaceBoard" /> that will be used by the BioCAM.</param>
            <returns>True when the board is set and initialized successfully; false, otherwise.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCam.Initialize">
            <summary>
            Initialize the BioCAM.
            </summary>
            <returns>Whether the operation was successful.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCam.Close(System.Boolean)">
            <summary>
            Close the BioCAM and used resources.
            </summary>
            <param name="closeBoard">True for closing also the board.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCam.StartDataStreaming(System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Start the acquisition.
            </summary>
            <param name="dataPacketTimeSpanMs">The number of milliseconds represented on a single acquired data packet.</param>
            <param name="optimizeDataPacketLatency">A value indicating whether the data stream is optimized for speed (minimum data packet latency) and the consistency of the time interval between successive data packets.</param>
            <returns>Whether the operation was successful.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCam.StopDataStreaming">
            <summary>
            Stop the acquisition.
            </summary>
            <returns>Whether the operation was successful.</returns>
        </member>
        <member name="E:_3Brain.BioCamDriver.IBioCam.DataStreamingStarted">
            <summary>
            Fires when data acquisition starts.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.IBioCam.DataStreamingStopped">
            <summary>
            Fires when data acquisition ends.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.IBioCam.DataReceived">
            <summary>
            Fires when a new chunk of data is acquired.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.IBioCam.DataLossAsync">
            <summary>
            Fires asynchronously when an acquisition data loss occurs.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.IBioCam.DataStreamingError">
            <summary>
            Fires when unrecoverable error occurs during acquisition.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.IBioCam.DataRateMeasuredAsync">
            <summary>
            Fires asynchronously when a data rate value is measured.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.IBioCam.BioCamConnectionStatusChanged">
            <summary>
            Event fired when the BioCAM connection status changes by becoming either disconnected or connected.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.IBioCam.BioCamDestroyed">
            <summary>
            Event fired when the BioCAM is destroyed (no more available) and all the reference to it should be disposed.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.IBioCam.SendingCommand">
            <summary>
            Event fired when sending a command to the BioCAM that gives an opportunity to customize the message.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.IBioCam.BioCamMessageSent">
            <summary>
            Event fired when a user informative (info, warning, error, etc.) message is sent.
            </summary>
        </member>
        <member name="E:_3Brain.BioCamDriver.IBioCam.CyclicControlPerformed">
            <summary>
            Fires every time when a BioCAM cyclic control is performed.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.BioCamRoi">
            <summary>
            Represents a BioCAM region of interest (ROI) structure.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.IBioCamStim">
            <summary>
            Defines a BioCAM stimulator.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCamStim.Settings">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.BioCamStimSettings" /> used for the stimulator.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCamStim.Properties">
            <summary>
            Gets the <see cref="T:_3Brain.Common.StimProperties" /> compatible with the stimulator.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCamStim.EndPoints">
            <summary>
            Gets the available <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> that can be used with the given stimulation channel.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCamStim.IsInitialized">
            <summary>
            Gets whether the stimulator is initialized or not.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCamStim.IsStimulating">
            <summary>
            Gets whether the stimulator is running.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCamStim.TimeResolutionMicroSec">
            <summary>
            Gets the time resolution of the stimulator in microseconds.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCamStim.AmplitudeResolutionUM">
            <summary>
            Gets the amplitude resolution for the stimulator in the used unit measure (current: micro-Ampere, voltage: micro-Volt).
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCamStim.MaxPulseCount">
            <summary>
            Gets the maximum number of stimulus pulses that can be loaded inside the stimulator's internal memory.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.IBioCamStim.Protocol">
            <summary>
            Gets the stimulator protocol manager.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCamStim.GetReferenceElectrodeEndPoint">
            <summary>
            Gets the reference electrode's <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.
            </summary>
            <returns>The requested endpoint.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCamStim.GetExternalEndPoint(_3Brain.BioCamDriver.BioCamStimExternalEndPoint)">
            <summary>
            Gets the corresponding external <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> from a given <see cref="T:_3Brain.BioCamDriver.BioCamStimExternalEndPoint" />.
            </summary>
            <param name="ep">The <see cref="T:_3Brain.BioCamDriver.BioCamStimExternalEndPoint" />.</param>
            <returns>The requested endpoint.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCamStim.GetInternalEndPoint(_3Brain.Common.ChCoord)">
            <summary>
            Gets the corresponding internal <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> from a given <see cref="T:_3Brain.Common.ChCoord" />.
            </summary>
            <param name="ep">The <see cref="T:_3Brain.Common.ChCoord" />.</param>
            <returns>The requested endpoint.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCamStim.GetEndPointById(System.Int64)">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> corresponding to the given terminal identifier.
            </summary>
            <param name="endPointId">The terminal identifier.</param>
            <returns>The requested endpoint.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCamStim.GetEndPointByName(System.String)">
            <summary>
            Gets the <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> corresponding to the given terminal name.
            </summary>
            <param name="endPointName">The terminal name.</param>
            <returns>The requested endpoint.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCamStim.IsAvailable">
            <summary>
            Returns a value indicating whether the stimulator module is available.
            </summary>
            <returns>Whether the stimulator module is available.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCamStim.Initialize(_3Brain.BioCamDriver.StimProtocolType)">
            <summary>
            Initializes the stimulator for the first time and returns a value indicating whether the operation was successful.
            </summary>
            <param name="protocolType">The protocol type.</param>
            <returns>Whether the stimulator initialized successfully.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCamStim.Close">
            <summary>
            Closes the stimulator and returns a value indicating whether the operation was successful.
            </summary>
            <returns>Whether the stimulator closed successfully.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCamStim.Start">
            <summary>
            Start the stimulator and returns a value indicating whether the operation was successful. 
            </summary>
            <returns>Whether the stimulator started successfully.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCamStim.Stop">
            <summary>
            Stop the stimulator and returns a value indicating whether the operation was successful.
            </summary>
            <returns>Whether the stimulator stopped successfully.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCamStim.Send(_3Brain.Common.RectangularStimPulse,_3Brain.BioCamDriver.StimEndPoint[],_3Brain.BioCamDriver.StimEndPoint[])">
            <remarks>
                <para>
            When this method is invoked, each argument passed to the BioCAM is stored on a corresponding internal memory buffer. Be aware of the size of the stimulation arguments that you are passing, because the individual memory buffers might overflow. Any time that one of these memory buffers overflows will cause the next invocation of the method to not consider the new argument values.
            </para>
                <para>
            Following here you can see the maximum number of values allowed for each values type.
            </para>
                <list type="bullet">
                    <item>
                        <term>
                            <see cref="T:_3Brain.Common.RectangularStimPulse" />
                        </term>
                        <description>Up to 64 values.</description>
                    </item>
                    <item>
                        <term>
                            <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />
                        </term>
                        <description>Up to 288 values.</description>
                    </item>
                </list>
            </remarks>
            <summary>
            Sends an immediate stimulation pulse.
            </summary>
            <param name="pulse">The pulse configuration.</param>
            <param name="positiveEndPoints">The array of positive <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.</param>
            <param name="negativeEndPoints">The array of negative <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.</param>
            <returns>Whether the stimulation values were send successfully.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCamStim.Send(_3Brain.Common.RectangularStimPulse,_3Brain.BioCamDriver.StimEndPoint[],_3Brain.BioCamDriver.StimEndPoint[],System.UInt64@)">
            <remarks>
                <para>
            When this method is invoked, each argument passed to the BioCAM is stored on a corresponding internal memory buffer. Be aware of the size of the stimulation arguments that you are passing, because the individual memory buffers might overflow. Any time that one of these memory buffers overflows will cause the next invocation of the method to not consider the new argument values.
            </para>
                <para>
            Following here you can see the maximum number of values allowed for each values type.
            </para>
                <list type="bullet">
                    <item>
                        <term>
                            <see cref="T:_3Brain.Common.RectangularStimPulse" />
                        </term>
                        <description>Up to 64 values.</description>
                    </item>
                    <item>
                        <term>
                            <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />
                        </term>
                        <description>Up to 288 values.</description>
                    </item>
                </list>
            </remarks>
            <summary>
            Sends an immediate stimulation pulse.
            </summary>
            <param name="pulse">The pulse configuration.</param>
            <param name="positiveEndPoints">The array of positive <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.</param>
            <param name="negativeEndPoints">The array of negative <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.</param>
            <param name="latency">Accounts for the time to program all <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />. Latency is expressed in clock cycles relative to the beginning of the acquisition.</param>
            <returns>Whether the stimulation values were send successfully.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.IBioCamStim.Send(_3Brain.Common.RectangularStimPulse,_3Brain.BioCamDriver.StimEndPoint[],_3Brain.BioCamDriver.StimEndPoint[],System.Double[])">
            <remarks>
                <para>
            When this method is invoked, each argument passed to the BioCAM is stored on a corresponding internal memory buffer. Be aware of the size of the stimulation arguments that you are passing, because the individual memory buffers might overflow. Any time that one of these memory buffers overflows will cause the next invocation of the method to not consider the new argument values.
            </para>
                <para>
            Following here you can see the maximum number of values allowed for each values type.
            </para>
                <list type="bullet">
                    <item>
                        <term>
                            <see cref="T:_3Brain.Common.RectangularStimPulse" />
                        </term>
                        <description>Up to 64 values.</description>
                    </item>
                    <item>
                        <term>
                            <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />
                        </term>
                        <description>Up to 288 values.</description>
                    </item>
                    <item>
                        <term>Time-stamps</term>
                        <description>Up to 1024 values.</description>
                    </item>
                </list>
            </remarks>
            <summary>
            Sends stimulation pulses.
            </summary>
            <param name="pulse">The pulse configuration.</param>
            <param name="positiveEndPoints">The array of positive <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.</param>
            <param name="negativeEndPoints">The array of negative <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.</param>
            <param name="timestamps">The ordered array of pulse time-stamps in microsecond relative to the beginning of the acquisition.</param>
            <returns>Whether the stimulation values were send successfully.</returns>
        </member>
        <member name="F:_3Brain.BioCamDriver.SatEstimate.SatFraction">
            <summary>
            The number of saturated samples divided by the total number of samples.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.SatEstimate.NSatChs">
            <summary>
            The number of saturating channels.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.StimCh">
            <summary>
            Represents a stimulation channel.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimCh.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.StimCh" />.
            </summary>
            <param name="chId">The stimulation channel identifier value.</param>
            <param name="label">The label that represents the current object.</param>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimCh.CanStimInternalEndPoints">
            <summary>
            Gets whether the stimulation channel supports internal end points.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimCh.CanStimExternalEndPoints">
            <summary>
            Gets whether the stimulation channel supports external end points.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimCh.ChId">
            <summary>
            Gets the stimulation channel identifier value.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimCh.Label">
            <summary>
            Gets a label that represents the current object.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimCh.AreEndPointsValid(_3Brain.BioCamDriver.StimEndPoint[],_3Brain.BioCamDriver.StimEndPoint[])">
            <summary>
            Returns a value indicating whether the given end points are valid.
            </summary>
            <returns>True id valid; false, otherwise.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimCh.IsSupportingEndPoint(_3Brain.BioCamDriver.StimEndPoint)">
            <summary>
            Gets a value indicating whether the given <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> is supported by this stimulation channel.
            </summary>
            <param name="ep">The endpoint to check.</param>
            <returns>True if supported; false, otherwise.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimCh.CheckEndPoint(_3Brain.BioCamDriver.StimEndPoint[])">
            <summary>
            Asserts whether the given <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> are valid. Otherwise, fires an exception.
            </summary>
            <param name="eps">The endpoint to check.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> are null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when the <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> are invalid.</exception>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimCh.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimCh.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
            <returns>True if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimCh.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimCh.Equals(_3Brain.BioCamDriver.StimCh)">
            <summary>
            Determines whether the specified <see cref="T:_3Brain.BioCamDriver.StimCh" /> is equal to the current <see cref="T:_3Brain.BioCamDriver.StimCh" />.
            </summary>
            <param name="other">The <see cref="T:_3Brain.BioCamDriver.StimCh" /> to compare with the current <see cref="T:_3Brain.BioCamDriver.StimCh" />.</param>
            <returns>True if the specified <see cref="T:_3Brain.BioCamDriver.StimCh" /> is equal to the current <see cref="T:_3Brain.BioCamDriver.StimCh" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimCh.op_Equality(_3Brain.BioCamDriver.StimCh,_3Brain.BioCamDriver.StimCh)">
            <summary>
            Determines whether the first <see cref="T:_3Brain.BioCamDriver.StimCh" /> is equal to the second <see cref="T:_3Brain.BioCamDriver.StimCh" />.
            </summary>
            <param name="x">The first <see cref="T:_3Brain.BioCamDriver.StimCh" /> to compare.</param>
            <param name="y">The second <see cref="T:_3Brain.BioCamDriver.StimCh" /> to compare.</param>
            <returns>True if the first <see cref="T:_3Brain.BioCamDriver.StimCh" /> is equal to the second <see cref="T:_3Brain.BioCamDriver.StimCh" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimCh.op_Inequality(_3Brain.BioCamDriver.StimCh,_3Brain.BioCamDriver.StimCh)">
            <summary>
            Determines whether the first <see cref="T:_3Brain.BioCamDriver.StimCh" /> is not equal to the second <see cref="T:_3Brain.BioCamDriver.StimCh" />.
            </summary>
            <param name="x">The first <see cref="T:_3Brain.BioCamDriver.StimCh" /> to compare.</param>
            <param name="y">The second <see cref="T:_3Brain.BioCamDriver.StimCh" /> to compare.</param>
            <returns>True if the first <see cref="T:_3Brain.BioCamDriver.StimCh" /> is not equal to the second <see cref="T:_3Brain.BioCamDriver.StimCh" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimCh.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.StimChDupleX">
            <summary>
            Represents a stimulation channel of the BioCAM DupleX.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.StimChAlpha">
            <summary>
            Represents a stimulation channel of the HyperCAM Alpha.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimChAlpha.CanStimExternalEndPoints">
            <summary>
            Gets whether the stimulation channel supports external end points.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.StimEndPoint">
            <summary>
            Represents a stimulation endpoint.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimEndPoint.#ctor(System.Int64,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.
            </summary>
            <param name="id">The unique identifier of the endpoint.</param>
            <param name="name">The string identifying the endpoint.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimEndPoint.#ctor(System.Int64,System.String,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.
            </summary>
            <param name="id">The unique identifier of the endpoint.</param>
            <param name="name">The string identifying the endpoint.</param>
            <param name="location">The string giving information on where the endpoint is located.</param>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimEndPoint.#ctor(System.Int64,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.
            </summary>
            <param name="id">The unique identifier of the endpoint.</param>
            <param name="name">The string identifying the endpoint.</param>
            <param name="location">The string giving information on where the endpoint is located.</param>
            <param name="description">The descriptive text of the endpoint.</param>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimEndPoint.Id">
            <summary>
            Gets the unique identifier of the end point.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimEndPoint.IsInternal">
            <summary>
            Gets a value indicating whether the endpoint is internal to the MEA plate.
            In case of a reference electrode, this value returns false.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimEndPoint.IsExternal">
            <summary>
            Gets a value indicating whether the endpoint is external to the MEA plate.
            In case of a reference electrode, this value returns false.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimEndPoint.IsReference">
            <summary>
            Gets a value indicating whether the endpoint is the reference electrode of the MEA.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimEndPoint.Name">
            <summary>
            Gets the unique string identifying the endpoint.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimEndPoint.Location">
            <summary>
            Gets a string giving information on where the endpoint is located.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimEndPoint.Description">
            <summary>
            Gets a descriptive text of the endpoint.
            </summary>
        </member>
        <member name="P:_3Brain.BioCamDriver.StimEndPoint.IsValid">
            <summary>
            Gets whether it is a valid endpoint.
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimEndPoint.ToChCoord">
            <summary>
            Gets the coordinates of the end point when this is an internal endpoint or null in case it is a reference endpoint or an external endpoint.
            </summary>
            <returns>The coordinates.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimEndPoint.ToExternalEndPoint">
            <summary>
            Gets the corresponding <see cref="T:_3Brain.BioCamDriver.BioCamStimExternalEndPoint" /> of the end point when this is an external endpoint or null in case it is a reference endpoint or an internal endpoint.
            </summary>
            <returns>The coordinates.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimEndPoint.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimEndPoint.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimEndPoint.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
            <returns>True if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimEndPoint.Equals(_3Brain.BioCamDriver.StimEndPoint)">
            <summary>
            Determines whether the specified <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> is equal to the current <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.
            </summary>
            <param name="other">The <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> to compare with the current <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.</param>
            <returns>True if the specified <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> is equal to the current <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimEndPoint.op_Equality(_3Brain.BioCamDriver.StimEndPoint,_3Brain.BioCamDriver.StimEndPoint)">
            <summary>
            Determines whether the first <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> is equal to the second <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.
            </summary>
            <param name="x">The first <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> to compare.</param>
            <param name="y">The second <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> to compare.</param>
            <returns>True if the first <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> is equal to the second <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />; otherwise, false.</returns>
        </member>
        <member name="M:_3Brain.BioCamDriver.StimEndPoint.op_Inequality(_3Brain.BioCamDriver.StimEndPoint,_3Brain.BioCamDriver.StimEndPoint)">
            <summary>
            Determines whether the first <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> is not equal to the second <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />.
            </summary>
            <param name="x">The first <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> to compare.</param>
            <param name="y">The second <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> to compare.</param>
            <returns>True if the first <see cref="T:_3Brain.BioCamDriver.StimEndPoint" /> is not equal to the second <see cref="T:_3Brain.BioCamDriver.StimEndPoint" />; otherwise, false.</returns>
        </member>
        <member name="T:_3Brain.BioCamDriver.EepromType">
            <summary>
            Enumerates all EEPROM users.
            </summary>
        </member>
        <member name="T:_3Brain.BioCamDriver.TempSensor">
            <summary>
            Enumerates all temperature sensors.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.TempSensor.ChipInternal">
            <summary>
            The temperature sensor that is inside the CMOS.
            </summary>
        </member>
        <member name="F:_3Brain.BioCamDriver.TempSensor.ChipEnvironment">
            <summary>
            The temperature sensor that is placed nearby the MEA chip (e.g. below).
            </summary>
        </member>
        <member name="M:_3Brain.BioCamDriver.TempSensorExtensions.SupportTemperatureControl(_3Brain.BioCamDriver.TempSensor)">
            <summary>
            Gets a value indicating whether this <see cref="T:_3Brain.BioCamDriver.TempSensor" /> can be used to adjust the temperature through a closed-loop control.
            </summary>
            <param name="tempSensor">The temperature sensor.</param>
            <returns>Whether the sensor supports temperature adjustment.</returns>
        </member>
    </members>
</doc>